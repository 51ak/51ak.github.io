<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on dboop.com</title>
    <link>/categories/python/</link>
    <description>Recent content in python on dboop.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 03 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据可视化:动态趋势图</title>
      <link>/post/2019/12/03/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8A%A8%E6%80%81%E8%B6%8B%E5%8A%BF%E5%9B%BE/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/12/03/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8A%A8%E6%80%81%E8%B6%8B%E5%8A%BF%E5%9B%BE/</guid>
      <description>可视化效果 当然上面的图是不会动的
特意录了段视频，来看看效果： 数据库自动化流程的动态展示效果视图http://www.dboop.com/img/timebar.mp4
制作过程 数据源： 这个可视化效果需要4列 ： - 第一列：时间分类（一般是月份,年份） - 第二列：时间（一般是小时，天） - 第三列：项目分类 - 第四列：具体的值
这里我们用MYSQL数据源中拉取 制作一张报表 我们看一下完整的报表编辑示意图： 报表内容解释 &amp;lt;page&amp;gt; &amp;lt;viewtype&amp;gt;timebar&amp;lt;/viewtype&amp;gt; &amp;lt;!--定义我们这个图形的类别，在张报表里我们用timebar：动态柱图，还有很多:line,bar,mutibar,map,tree,table,edittable...等可选 --&amp;gt; &amp;lt;connstr&amp;gt;&amp;lt;!--这里写数据库ID,需要提前申请好访问这个DB的权限--&amp;gt;&amp;lt;/connstr&amp;gt; &amp;lt;sqlstr&amp;gt; &amp;lt;![CDATA[ select DATE_FORMAT(addtime,&#39;%Y年%m月&#39;) as ftitle,DATE_FORMAT(addtime,&#39;%Y-%m-%d&#39;) as addtime,applytype,convert(sum(counts),unsigned) as counts from processlist where addtime between %s and %s group by addtime,applytype order by addtime ]]&amp;gt; &amp;lt;/sqlstr&amp;gt; &amp;lt;sqlpara&amp;gt;#1&amp;lt;/sqlpara&amp;gt; &amp;lt;sqlpara&amp;gt;#2&amp;lt;/sqlpara&amp;gt; &amp;lt;!--这时是给SQL传参--&amp;gt; &amp;lt;title&amp;gt;数据库自动化流程:&amp;lt;/title&amp;gt; &amp;lt;!--timebar的标题--&amp;gt; &amp;lt;maxdisplay&amp;gt;20&amp;lt;/maxdisplay&amp;gt; &amp;lt;!--最多显示多少项--&amp;gt; &amp;lt;playInterval&amp;gt;100&amp;lt;/playInterval&amp;gt; &amp;lt;!--刷新间隔，单位毫秒，默认是50毫秒--&amp;gt; &amp;lt;height&amp;gt;800px&amp;lt;/height&amp;gt; &amp;lt;!--动态图表的高度，可以不填--&amp;gt; &amp;lt;/page&amp;gt; &amp;lt;para&amp;gt; &amp;lt;name&amp;gt;开始日期&amp;lt;/name&amp;gt; &amp;lt;type&amp;gt;date&amp;lt;/type&amp;gt; &amp;lt;defaultvalue&amp;gt;getdate()-1y&amp;lt;/defaultvalue&amp;gt; &amp;lt;!--定文了一个日期选择框，默认值是一年前的今天 --&amp;gt; &amp;lt;/para&amp;gt; &amp;lt;para&amp;gt; &amp;lt;name&amp;gt;结束日期&amp;lt;/name&amp;gt; &amp;lt;type&amp;gt;date&amp;lt;/type&amp;gt; &amp;lt;defaultvalue&amp;gt;getdate()&amp;lt;/defaultvalue&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Python实现的MYSQL故障检测和转移脚本_设计思路</title>
      <link>/post/2019/03/12/python%E5%AE%9E%E7%8E%B0%E7%9A%84mysql%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E5%92%8C%E8%BD%AC%E7%A7%BB%E8%84%9A%E6%9C%AC_%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/03/12/python%E5%AE%9E%E7%8E%B0%E7%9A%84mysql%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E5%92%8C%E8%BD%AC%E7%A7%BB%E8%84%9A%E6%9C%AC_%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</guid>
      <description>前置条件  1 主 +1备 +N从 启用GTID 主备做双向同步 主备开启半同步 业务连接数据库用自研中件间,中件间里配置的是ip地址 建议从节点的复制从备节点上出发 目标实例上有库:  use dba_mana; CREATE TABLE dba_check_ha ( id int(11) NOT NULL default 0, _timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; insert into dba_check_ha (id) values(1);  探测流程:  探测各节点状态是否有连接失败的节点 在主节点上确认read_only是FALSE,尝试update dba_check_ha set id=id+1 在所有节点上执行 show global variables like &amp;lsquo;read_only&amp;rsquo; 判断各库设置,如果从 库开了写会报警 如果主节点失败,则失败次数+1(其他节点失败,只会报警) 如果累计失败次数达到要求,检查备节点是否可用, 如果不可用,报严重故障,不做切换 如果备节点可用,则启用切换验证流程  切换验证流程  旧主库设置成只读 判断主库,备库GTID是否一致 如不一致,则循环等待1秒,最多M次(可设置) 如主库已失去连接或主备库GTID一致(2选1),则启用切换流程  切换流程  备库选为新主库,启用写 查找所有符合条件的中件间修改替换成新主库 替换linkset里的adminconnstr(已修复dba平台的上线和其他功能) 替换linknode里的各节点角色 重新加载配置文件 报告切换结果  运行结果:  节点失败和故障会报警(企业微信) 每个实例会在dba_mana.</description>
    </item>
    
  </channel>
</rss>