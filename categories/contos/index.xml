<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>contos on Classic</title>
    <link>/categories/contos/</link>
    <description>Recent content in contos on Classic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="/categories/contos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python虚拟环境安装和配置venv和conda</title>
      <link>/ops/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/ops/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</guid>
      <description>两种比较常用的虚拟python环境 可以避免多版本的包冲突和python版本依赖  conda 1. 安装 Conda  下载 Miniconda 安装脚本  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  运行安装脚本  bash Miniconda3-latest-Linux-x86_64.sh  重新加载 shell 配置文件以激活 Conda：  source ~/.bashrc 2. 创建 Python 3.10 虚拟环境  使用 Conda 创建一个新的虚拟环境，并指定 Python 3.10 作为解释器：  conda create -n py310env python=3.10 #py310env 是环境的名称，你可以根据需要更改。 3. 激活虚拟环境  创建环境后，激活它以开始使用：  conda activate py310env 4. 验证 Python 版本  确保你已经成功切换到 Python 3.10：  python --version 你应该看到输出类似于 Python 3.10.x。</description>
    </item>
    
  </channel>
</rss>
