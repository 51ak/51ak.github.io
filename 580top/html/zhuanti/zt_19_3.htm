<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《缓存》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题"><span class="zc_666">其他数据库</span></a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_yunwei_1.htm">系统运维</a>&nbsp;&gt;&nbsp;<a href="zt_19_1.htm">缓存</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《缓存》</h1><span>缓存的工作原理是当CPU要读取一个数据时，首先从缓存中查找，找到就立即读取并送给CPU处理；没有找到，就用相对慢的速率从内存中读取并送给CPU处理，同时把这个数据所在的数据块调入缓存中，可以使得以后对整块数据的读取都从缓存中进行，不必再调用内存。</span></div><UL><LI class=list_title><SPAN>2010/12/30 13:56:44</SPAN><a href="../201012/dba_455.htm"  title="redis运维的一些知识点 ">redis运维的一些知识点 </a>  <LI   class="text">最近在线上实际使用了一些redis服务,总结下运维的相关知识.1:redis的生产机主要为2颗cpu,8个核心,内存32g,单盘700g的sata盘.2:存储的数据为博客系统的积分数据.积分代表是用户的发文章积分,发评论积分,登录积分,特点即每天单个用户相关数据至多增加一次,是一个典型的读多写少系统.虽然在这个项目中将redis作为内存系统使用,本质上是落地存储.3:redis版本为2.2.5,使<a href="../201012/dba_455.htm" title="redis运维的一些知识点 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：ywdblog</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/1/1 23:38:35</SPAN><a href="../201101/dba_451.htm"  title="Linux高速缓存使用率调查 ">Linux高速缓存使用率调查 </a>  <LI   class="text">linux的高速缓存pagecache对性能的影响至关重要，但是实际系统中我们的利用率如何呢，特别是具体到每个设备的利用情况。从下图我们可以很清楚的看到： 我们知道io请求由vfs发起，经过pagecache缓存，挡不住的就落实到io设备去，那么统计这个利用率就很简单。 我们只要知道挡不住的io的比例就好了。我写了个systemtap脚本来解决这个问题： $ uname -r2.6.18-164.<a href="../201101/dba_451.htm" title="Linux高速缓存使用率调查 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/1/2 22:49:38</SPAN><a href="../201101/dba_447.htm"  title="基于Squid的视频业务日志分析 ">基于Squid的视频业务日志分析 </a>  <LI   class="text">最近分析了下基于squid的视频业务的日志,发现一些比较不错的内容:1:很多视频网站或者静态类网站都用squid作为前端的缓存.其实对于大容量对象来说,内存命中和磁盘命中对于用户的下载速率影响不大,但是需要基于一个前提:磁盘的吞吐能力处于可接受范围之内.一般i/o等待不要超过30.包括缓存命中和未命中下载速率也影响不大,因为内网的带宽是足够的(最终还是取决于磁盘性能).总体来说,视频类的静态服务取<a href="../201101/dba_447.htm" title="基于Squid的视频业务日志分析 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：ywdblog</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/1/2 23:25:45</SPAN><a href="../201101/dba_446.htm"  title="关于Memcache长连接自动重连的问题 ">关于Memcache长连接自动重连的问题 </a>  <LI   class="text">使用php的memcache模块写了一个访问tokyotrant的long-live程序，因为是long-live的，所以我就connect一次之后一直使用了，理论上我connect之后就可以一直使用，中间不会出现重新连接的问题，为了确认我的推断，启动进程之后，我用strace跟踪了一些进程，令我意外的是，隔一段时间连接就会关闭，然后重新连接，怎么回事呢？我怀疑两个方面：1. 我的程序有问题2. <a href="../201101/dba_446.htm" title="关于Memcache长连接自动重连的问题 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：phpor &lt;lijunjie1982@yahoo.com.cn&gt;</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/2/1 14:05:07</SPAN><a href="../201102/dba_437.htm"  title="Linux服务器性能评估 ">Linux服务器性能评估 </a>  <LI   class="text">一、影响linux服务器性能的因素 1. 操作系统级cpu内存磁盘i/o带宽网络i/o带宽2. 程序应用级二、系统性能评估标准 影响性能因素影响性能因素评判标准好坏糟糕cpuuser% + sys%&lt; 70%user% + sys%= 85%user% + sys% &gt;=90%内存swap in(si)＝0swap out(so)＝0per cpu with 10 page/smore<a href="../201102/dba_437.htm" title="Linux服务器性能评估 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：唐福林</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/14 15:59:30</SPAN><a href="../201103/dba_424.htm"  title="记一次MongoDB性能问题 ">记一次MongoDB性能问题 </a>  <LI   class="text">最近忙着把一个项目从mysql迁移到mongodb，在导入旧数据的过程中，遇到了些许波折，犯了不少错误，但同时也学到了不少知识，遂记录下来。公司为这个项目专门配备了几台高性能务器，清一色的双路四核超线程cpu，外加32g内存，运维人员安装好mongodb后，就轮到我了，我习惯于在使用新服务器前先看看相关日志，了解一下基本情况，当我浏览mongodb日志时，发现一些警告信息：warning: you<a href="../201103/dba_424.htm" title="记一次MongoDB性能问题 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：老王</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/17 13:52:42</SPAN><a href="../201103/dba_421.htm"  title="shell 遍历mc ">shell 遍历mc </a>  <LI   class="text">单行脚本：host=10.10.10.10;port=11211;echo -e "stats cachedump 2 0\r\nquit\r\n" | nc $host $port | awk '{print $2;}'| while read key;do echo get $key; done | nc $host $port<a href="../201103/dba_421.htm" title="shell 遍历mc ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：phpor &lt;lijunjie1982@yahoo.com.cn&gt;</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/23 13:25:39</SPAN><a href="../201103/dba_413.htm"  title="使用xdebug调试PHP 找出PHP程序的瓶颈 ">使用xdebug调试PHP 找出PHP程序的瓶颈 </a>  <LI   class="text">xdebug是php的一个扩展应用，有了xdebug就可以轻松的调试php程序，有了它，我们就不用使用var_dump()，print_r()之类的傻瓜调试函数了。 xdebug则提供了更多的功能，能全方位的对php脚本进行调试。xdebug主要的功能如下：堆栈追踪和函数追踪;错误信息;内存分配;剖析php脚本的信息;代码覆盖率分析;远程调试分析;1、ubuntu搭建xdebug调试环境安装xde<a href="../201103/dba_413.htm" title="使用xdebug调试PHP 找出PHP程序的瓶颈 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：断桥残雪</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='zt_19_1.htm' title='回到第一页'>首页</a><a href='zt_19_2.htm' title='上一页'>上一页</a><a href='zt_19_1.htm' title='第1页'>1</a><a href='zt_19_2.htm' title='第2页'>2</a><span class="current">3</span><a href='zt_19_4.htm' title='第4页'>4</a><a href='zt_19_4.htm' title='下一页'>下一页</a><a href='zt_19_4.htm' title='尾页'>尾页</a><input type="hidden" value="3" id="page">&nbsp;&nbsp;<strong>分页：3/4页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
