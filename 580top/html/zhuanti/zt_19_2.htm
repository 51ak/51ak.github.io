<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《缓存》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题"><span class="zc_666">其他数据库</span></a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_yunwei_1.htm">系统运维</a>&nbsp;&gt;&nbsp;<a href="zt_19_1.htm">缓存</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《缓存》</h1><span>缓存的工作原理是当CPU要读取一个数据时，首先从缓存中查找，找到就立即读取并送给CPU处理；没有找到，就用相对慢的速率从内存中读取并送给CPU处理，同时把这个数据所在的数据块调入缓存中，可以使得以后对整块数据的读取都从缓存中进行，不必再调用内存。</span></div><UL><LI class=list_title><SPAN>2010/7/12 22:06:30</SPAN><a href="../201007/dba_509.htm"  title="PERL内存管理 ">PERL内存管理 </a>  <LI   class="text">需求：想要实现这么一个功能，现有一个字符串文件，比如说是有abcdefghijklmn，另外有一个文件是这样的信息：5 e7 g11 k前面一列是位置（从1开始记），后面是字符，我现在想验证这个文件这样的信息有多少是对的，多少是错的。具体的做法：把前面的字符串存到数组里，用下标做索引，然后通过这个数组来校验文件二。主要实现代码入下：my $a;while (&lt;&gt;){ chomp; $a<a href="../201007/dba_509.htm" title="PERL内存管理 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：懒人运维</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/7/21 23:10:28</SPAN><a href="../201007/dba_505.htm"  title="node.js调研与服务性能测试 ">node.js调研与服务性能测试 </a>  <LI   class="text">这几天对nodejs进行了一下简单的调研主要关注这几个方面socket服务性能, socket客户端性能 http服务性能. 服务的稳定性与资源占用 开发成本 考虑到今后的应用场景, 实现了一个简单的memcache代理服务.内部维护了一个50连接的简单连接池, 通过长连接与memcache服务器相连.同时对外提供socket代理服务与http restful服务测试环境测试使用编译安装的node<a href="../201007/dba_505.htm" title="node.js调研与服务性能测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：qingdu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/8/6 22:24:52</SPAN><a href="../201008/dba_502.htm"  title="Tsung用于压测MySQL服务器的脚本 ">Tsung用于压测MySQL服务器的脚本 </a>  <LI   class="text">这个mysql服务器压测的需求是 ：环境: linux rhel 5u4 x86-64, 24g内存， 16核.mysql服务器在10.232.36.100上。压力由最多32个客户端发起，每个客户端分别做update， insert, delete操作，概率分别是50%, 30%, 20%, 每种操作循环999999 × 100次，每100次操作后休息1-3秒。这样的压力最多持续2个小时。我们用的<a href="../201008/dba_502.htm" title="Tsung用于压测MySQL服务器的脚本 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/8/20 22:35:37</SPAN><a href="../201008/dba_497.htm"  title="使用Aspersa洞悉Linux系统软硬件配置 ">使用Aspersa洞悉Linux系统软硬件配置 </a>  <LI   class="text">我们在做服务器的时候，老大扔给你一台机器，要你在上面开发。通常服务器软件是非常依赖于系统的软硬件的，软件通常是要紧贴硬件的特性，如果我们不能了解机器的硬件，我们就无法高效的开发。比如说想知道linux的系统的版本，cpu有几个，内存多少大， 机器什么型号，raid卡什么型号，硬盘有几个，文件系统是什么样子的，网卡什么型号，文件句柄设置什么的，用到虚拟化技术了吗，网络配置什么样的，目前资源使用是如何<a href="../201008/dba_497.htm" title="使用Aspersa洞悉Linux系统软硬件配置 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/1/30 19:36:22</SPAN><a href="../201101/dba_489.htm"  title="ubuntu10.10 使用mrtg监控服务器的cpu、内存、网络等等情况 ">ubuntu10.10 使用mrtg监控服务器的cpu、内存、网络等...</a>  <LI   class="text">ith mrtg" href="http://www.ptubuntu.com/tag/mrtg" rel="tag nofollow">mrtg/mrtg.disk#!/bin/bashhd=sdadisk=/dev/$hduptime=`/usr/bin/uptime |awk ‘{print $3″”$4″”$5}’`kbread_sec=`iostat -x $disk|grep $hd <a href="../201101/dba_489.htm" title="ubuntu10.10 使用mrtg监控服务器的cpu、内存、网络等等情况 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：ptubuntu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/10/22 23:46:42</SPAN><a href="../201010/dba_475.htm"  title="systemtap观察page_cache的使用情况 ">systemtap观察page_cache的使用情况 </a>  <LI   class="text">在规划服务器的内存使用的时候经常需要知道应用在理想情况下会使用多少的pagecache, 我们好预先把这个内存预留出来.这个值操作系统没有提供可查看的管道,我们只能自己写个脚本来实现. 下面的systemtap脚本每隔n秒显示下当前os下头10个文件占用多少的pagecache, 降序排列.$ cat &gt; pagecache.stpglobal __filenamesglobal pagec<a href="../201010/dba_475.htm" title="systemtap观察page_cache的使用情况 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/12/17 9:26:15</SPAN><a href="../201012/dba_464.htm"  title="提升磁盘IO性能的几个技巧 ">提升磁盘IO性能的几个技巧 </a>  <LI   class="text">　　目前磁盘都是机械方式运作的，主要体现在磁盘读写前寻找磁道的过程。磁盘自带的读写缓存大小，对于磁盘读写速度至关重要。读写速度快的磁盘，通常都带有较大的读写缓存。磁盘的寻道过程是机械方式，决定了其随机读写速度将明显低于顺序读写。在我们做系统设计和实现时，需要考虑到磁盘的这一特性。　　fastdfs是一个开源的高效分布式文件系统，它最初的实现，文件是按hash方式随机分布到多个目录中的，后来增加了顺<a href="../201012/dba_464.htm" title="提升磁盘IO性能的几个技巧 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：庄远</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/12/25 12:35:12</SPAN><a href="../201012/dba_461.htm"  title="本周扑火之 redis 不给力 ">本周扑火之 redis 不给力 </a>  <LI   class="text">social graph 高速接口，当前我们使用 redis 存储。但在实现的过程中，发现了诸多的问题。48g 内存的机器上部署了 2 个 redis 进程，一个 redis 占用超过 21 g 内存后，在快速写入的过程中同时进行一次 bgsave ，就将机器给弄挂了(微博上的直播)。我们对 redis 的监控远不如对 mysql 之类的完善，以至于 redis 机器假死，居然没有触发任何的报警。<a href="../201012/dba_461.htm" title="本周扑火之 redis 不给力 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="19" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：唐福林</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='zt_19_1.htm' title='回到第一页'>首页</a><a href='zt_19_1.htm' title='上一页'>上一页</a><a href='zt_19_1.htm' title='第1页'>1</a><span class="current">2</span><a href='zt_19_3.htm' title='第3页'>3</a><a href='zt_19_4.htm' title='第4页'>4</a><a href='zt_19_3.htm' title='下一页'>下一页</a><a href='zt_19_4.htm' title='尾页'>尾页</a><input type="hidden" value="2" id="page">&nbsp;&nbsp;<strong>分页：2/4页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
