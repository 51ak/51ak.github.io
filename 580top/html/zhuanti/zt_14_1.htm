<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《存储引擎InnoDB》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题">其他数据库</a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_mysql_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="zt_14_1.htm">存储引擎InnoDB</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《存储引擎InnoDB》</h1><span>InnoDB 是 MySQL 上第一个提供外键约束的数据存储引擎，除了提供事务处理外，InnoDB 还支持行锁，提供和 Oracle 一样的一致性的不加锁读取，能增加并发读的用户数量并提高性能，不会增加锁的数量。InnoDB 的设计目标是处理大容量数据时最大化性能，它的 CPU 利用率是其他所有基于磁盘的关系数据库引擎中最有效率的。</span></div><UL><LI class=list_title><SPAN>2009/10/11 22:42:06</SPAN><a href="../200910/dba_1321.htm"  title="Mysql的一些记录 ">Mysql的一些记录 </a>  <LI   class="text">年纪大了，很多东西容易忘记，就当做流水记录下来吧。1.mysql中，对于视图view，稍微复杂一点点的语法，比如视图定义中存在union，mysql的select查询就不走索引，走全表扫描。2.innodb存储引擎：索引存储为键数据＋primary key，比如id是主键，建status索引的话，索引数据存储为status+id，这样的话select查询时如果排序的话，尽量根据id来排序。3.my<a href="../200910/dba_1321.htm" title="Mysql的一些记录 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Incessant</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/14 18:28:01</SPAN><a href="../200910/dba_1315.htm"  title="InnoDB的缓存替换策略及其效果 ">InnoDB的缓存替换策略及其效果 </a>  <LI   class="text">我们开发自己的存储引擎页面缓存替换策略的过程中主要是参考了innodb与lru-k算法。innodb缓存替换策略使用分代与lru相结合的方式。分为old和young两个分代，系统维护old分代占总buffer大小的3/8左右。当一个页面第一次被访问时，是加入到old分代的lru头。并不是每次访问一个页面时就将这个页提到lru的头部，而是在这个页面在lru中的位置调整后，是否有很多页面已经被替换出去<a href="../200910/dba_1315.htm" title="InnoDB的缓存替换策略及其效果 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：风轻扬</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/16 12:14:32</SPAN><a href="../200910/dba_1309.htm"  title="恢复删除的数据表，数据库 ">恢复删除的数据表，数据库 </a>  <LI   class="text">在您进行恢复操作时，我们常常面临执行删除表/库操作丢失数据的问题。在这种情况下,就是我们的innodb 数据恢复工具也爱莫能助，因为存放表文件的目录被删除了(如果你设置了innodb-file-per-table)。同样的事情也发生在myisam表中，所有的.myd,.myi,.frm文件也被删了。所以当drop操作发生后，第一第一要干的事情就是：恢复文件。在ext3文件系统下，有两工具能帮上你的<a href="../200910/dba_1309.htm" title="恢复删除的数据表，数据库 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：互联网，请记住我</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:08:59</SPAN><a href="../200910/dba_1306.htm"  title="随机主键对InnoDB插入性能的影响 ">随机主键对InnoDB插入性能的影响 </a>  <LI   class="text">孔子说得好，“学而不思则罔，思而不学则殆”。看书看多了不去想不去做对比，很快脑子就会一片混乱。这篇blog稍微介绍下随机主键对innodb插入性能的影响。 innodb引擎的行结构相当复杂（compact、redundant、barracuda）。为了弄明白这一个细节，我翻了很多遍官方手册。后来又对比着看了很多本书，发现他们自相矛盾，无奈之下，只能从简单的开始测起。下面先摘抄两段矛盾的描述：《pr<a href="../200910/dba_1306.htm" title="随机主键对InnoDB插入性能的影响 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:10:16</SPAN><a href="../200910/dba_1305.htm"  title="InnoDB之Dirty Page、Redo log ">InnoDB之Dirty Page、Redo log </a>  <LI   class="text">在innodb中，buffer pool里面的dirty page一方面可以加快数据处理速度，同时也会造成数据的不一致(ram vs disk)。本文介绍了dirty page是如何产生，以及innodb如何利用redo log如何消除dirty page产生的数据不一致。当事务(transaction)需要修改某条记录（row）时，innodb需要将该数据所在的page从disk读到buffer<a href="../200910/dba_1305.htm" title="InnoDB之Dirty Page、Redo log ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：苏普</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:11:19</SPAN><a href="../200910/dba_1304.htm"  title="InnoDB insert性能拐点测试 ">InnoDB insert性能拐点测试 </a>  <LI   class="text">上篇blog《innodb select性能拐点测试》测试了innodb select的性能拐点，本篇blog对insert的性能拐点做了一些对比研究。大家有兴趣就关注一下吧！1、调整my.cnf的参数如下：innodb_file_per_table = 0innodb_flush_log_at_trx_commit = 2innodb_buffer_pool_size = 8ginnodb_fi<a href="../200910/dba_1304.htm" title="InnoDB insert性能拐点测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:11:51</SPAN><a href="../200910/dba_1303.htm"  title="InnoDB select性能拐点测试 ">InnoDB select性能拐点测试 </a>  <LI   class="text">传说innodb的数据量到了一定程度就会有一个很大的下滑。那么这个阙值究竟是是多少？来做一下测试吧！1、调整my.cnf的参数如下：innodb_file_per_table = 0innodb_flush_log_at_trx_commit = 2innodb_buffer_pool_size = 8ginnodb_file_io_threads = 4重启服务器，启动mysqld2、在test<a href="../200910/dba_1303.htm" title="InnoDB select性能拐点测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 23:10:29</SPAN><a href="../200910/dba_1302.htm"  title="MyISAM和InnoDB的插入性能测试 ">MyISAM和InnoDB的插入性能测试 </a>  <LI   class="text">测试表结构：create table `test` ( `id` bigint(20) not null auto_increment, `int_a` int(11) default null, `int_b` int(11) default null, `int_c` int(11) default null, `string_a` varchar(50) default null, `str<a href="../200910/dba_1302.htm" title="MyISAM和InnoDB的插入性能测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><span class="disabled">首页</span><span class="disabled">上一页</span><span class="current">1</span><a href='zt_14_2.htm' title='第2页'>2</a><a href='zt_14_3.htm' title='第3页'>3</a><a href='zt_14_4.htm' title='第4页'>4</a><a href='zt_14_5.htm' title='第5页'>5</a><a>...</a><a href='zt_14_2.htm' title='下一页'>下一页</a><a href='zt_14_11.htm' title='尾页'>尾页</a><input type="hidden" value="1" id="page">&nbsp;&nbsp;<strong>分页：1/11页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
