<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《存储引擎InnoDB》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题">其他数据库</a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_mysql_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="zt_14_1.htm">存储引擎InnoDB</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《存储引擎InnoDB》</h1><span>InnoDB 是 MySQL 上第一个提供外键约束的数据存储引擎，除了提供事务处理外，InnoDB 还支持行锁，提供和 Oracle 一样的一致性的不加锁读取，能增加并发读的用户数量并提高性能，不会增加锁的数量。InnoDB 的设计目标是处理大容量数据时最大化性能，它的 CPU 利用率是其他所有基于磁盘的关系数据库引擎中最有效率的。</span></div><UL><LI class=list_title><SPAN>2011/8/17 13:50:40</SPAN><a href="../201108/dba_1024.htm"  title="mysql innodb 文件相关的三个重要结构体 ">mysql innodb 文件相关的三个重要结构体 </a>  <LI   class="text">我们使用mysql,常使用innodb存储引擎，它包括两种，一种是innobase,另外一种是innodb plugin。今天主要介绍innodb plugin的file i/o操作，innodb plugin存储引擎的文件操作主要包括下面三个重要的结构体:fil_node_struce 一个node对应着一个文件fil_space_struct 一个space对应着一个tablespacefil<a href="../201108/dba_1024.htm" title="mysql innodb 文件相关的三个重要结构体 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Data &amp;#38; Architecture DBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/9/14 13:34:22</SPAN><a href="../201109/dba_1019.htm"  title="Innodb 中 rec_get_offsets 的使用注意点 ">Innodb 中 rec_get_offsets 的使用注意点 </a>  <LI   class="text">在innodb中使用rec_get_offsets来获取一条rec_t的各个字段的偏移量整个rec_get_offsets的形式为:/******************************************************//**the following function determines the offsets to each fieldin the record. i<a href="../201109/dba_1019.htm" title="Innodb 中 rec_get_offsets 的使用注意点 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：jm</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/9/14 13:35:00</SPAN><a href="../201109/dba_1018.htm"  title="Row Cache For Innodb ">Row Cache For Innodb </a>  <LI   class="text">最近在做mysql的优化,看到现在mysql分表分库后导致的内存利用率较低的问题,进行了优化,如果你也有类似的问题,可以试试下面的patchpatch下载:http://code.google.com/p/row-cache-for-innodb/问题 当一个mysql存不下全部的数据时,那么分库分表是一种常规的解决方案.但是一旦分库分表之后,关系型数据库对应的关系实际上被弱化了,很多查询不得不转<a href="../201109/dba_1018.htm" title="Row Cache For Innodb ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：jm</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/8 22:24:13</SPAN><a href="../201201/dba_1000.htm"  title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之单表unique查询 ">MySQL数据库InnoDB存储引擎查询优化器实现的分析之单...</a>  <LI   class="text">1.1 单表unique查询select * from nkeys where c3 = 3;调用流程：mysql_execute_command -&gt; handle_select -&gt; mysql_select -&gt; join_optimize -&gt; make_join_statistics -&gt;if ((table-&gt;key_info[key].flags <a href="../201201/dba_1000.htm" title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之单表unique查询 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/8 22:25:04</SPAN><a href="../201201/dba_999.htm"  title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之单表查询 ">MySQL数据库InnoDB存储引擎查询优化器实现的分析之单...</a>  <LI   class="text">1 单表查询1.1 单表range查询1) select * from nkeys where c3 &gt; 3; 不能进行索引覆盖扫描 index range scan2) select c3 from nkeys where c3 &gt; 3; 可以进行索引覆盖扫描 index only range scan调用流程：msyql_select -&gt; join::optimize -&<a href="../201201/dba_999.htm" title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之单表查询 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/8 22:26:22</SPAN><a href="../201201/dba_998.htm"  title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之optimizer_search_depth参数 ">MySQL数据库InnoDB存储引擎查询优化器实现的分析之opt...</a>  <LI   class="text">1.1 optimizer_search_depth参数以上提到的greedy_search+best_extension_by_limited_search函数，通过search_depth参数控制递归调用的深度。而search_depth参数，可通过optimizer_search_depth来设置。一般而言，如果optimizer_search_depth设置过大，那么join时，获取最优执<a href="../201201/dba_998.htm" title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之optimizer_search_depth参数 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/8 22:27:17</SPAN><a href="../201201/dba_997.htm"  title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之best_access_path函数分析 ">MySQL数据库InnoDB存储引擎查询优化器实现的分析之bes...</a>  <LI   class="text">1.1 best_access_path函数分析同样是使用4.1章节中的测试语句：select * from nkeys, aaa where nkeys.c3 = aaa.a3 and aaa.a2 = 2;1.1.1 总流程分析根据4.1章节的分析，join涉及到两张表，同时search_depth参数设置为62. n &lt; search_depth，复杂度为o(n!) = 2! = 2(<a href="../201201/dba_997.htm" title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之best_access_path函数分析 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/8 22:28:45</SPAN><a href="../201201/dba_996.htm"  title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之多表简单JOIN查询 ">MySQL数据库InnoDB存储引擎查询优化器实现的分析之多...</a>  <LI   class="text">1 多表查询1.1 多表简单joinselect * from nkeys, aaa where nkeys.c3 = aaa.a3 and aaa.a2 = 2;具体nkeys，aaa表的表定义，在附录一：aaa表;附录四：nkeys表中给出。调用主流程：1. mysql_select -&gt;join::optimize -&gt; make_join_statistics -&gt;sql<a href="../201201/dba_996.htm" title="MySQL数据库InnoDB存储引擎查询优化器实现的分析之多表简单JOIN查询 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='zt_14_1.htm' title='回到第一页'>首页</a><a href='zt_14_7.htm' title='上一页'>上一页</a><a>...</a><a href='zt_14_4.htm' title='第4页'>4</a><a href='zt_14_5.htm' title='第5页'>5</a><a href='zt_14_6.htm' title='第6页'>6</a><a href='zt_14_7.htm' title='第7页'>7</a><span class="current">8</span><a href='zt_14_9.htm' title='第9页'>9</a><a href='zt_14_10.htm' title='第10页'>10</a><a href='zt_14_11.htm' title='第11页'>11</a><a href='zt_14_9.htm' title='下一页'>下一页</a><a href='zt_14_11.htm' title='尾页'>尾页</a><input type="hidden" value="8" id="page">&nbsp;&nbsp;<strong>分页：8/11页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
