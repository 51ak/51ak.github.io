<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《存储引擎InnoDB》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题">其他数据库</a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_mysql_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="zt_14_1.htm">存储引擎InnoDB</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《存储引擎InnoDB》</h1><span>InnoDB 是 MySQL 上第一个提供外键约束的数据存储引擎，除了提供事务处理外，InnoDB 还支持行锁，提供和 Oracle 一样的一致性的不加锁读取，能增加并发读的用户数量并提高性能，不会增加锁的数量。InnoDB 的设计目标是处理大容量数据时最大化性能，它的 CPU 利用率是其他所有基于磁盘的关系数据库引擎中最有效率的。</span></div><UL><LI class=list_title><SPAN>2010/5/4 10:11:24</SPAN><a href="../201005/dba_1167.htm"  title="XtraDB/Innodb内部结构示意图 ">XtraDB/Innodb内部结构示意图 </a>  <LI   class="text"><a href="../201005/dba_1167.htm" title="XtraDB/Innodb内部结构示意图 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Data &amp;#38; Architecture DBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/5/20 13:25:52</SPAN><a href="../201005/dba_1159.htm"  title="MySQL Infobright 数据仓库快速安装笔记[原创] ">MySQL Infobright 数据仓库快速安装笔记[原创] </a>  <LI   class="text">　　infobright是一个与mysql集成的开源数据仓库（data warehouse）软件，可作为mysql的一个存储引擎来使用，select查询与普通mysql无区别。　　一、infobright的基本特征：　　优点：　　查询性能高：百万、千万、亿级记录数条件下，同等的select查询语句，速度比myisam、innodb等普通的mysql存储引擎快5～60倍　　存储数据量大：tb级数据大<a href="../201005/dba_1159.htm" title="MySQL Infobright 数据仓库快速安装笔记[原创] ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：张宴</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/6/12 17:52:41</SPAN><a href="../201006/dba_1146.htm"  title="MyISAM和InnoDB两种“引擎”的区别 ">MyISAM和InnoDB两种“引擎”的区别 </a>  <LI   class="text">存储引擎是什么？mysql中的数据用各种不同的技术存储在文件(或者内存)中。这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。例如，如果你在研究大量的临时数据，你也许需要使用内存存储引擎。内存存储引擎能够在内存中存储所有的表格数据。又或者，你也许需要一个支持事务处理的数据库<a href="../201006/dba_1146.htm" title="MyISAM和InnoDB两种“引擎”的区别 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：cevin</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/7/25 9:51:57</SPAN><a href="../201007/dba_1127.htm"  title="思考mysql内核之初级系列4--innodb缓冲区管理 ">思考mysql内核之初级系列4--innodb缓冲区管理 </a>  <LI   class="text"> 我们在前面讨论了一些mysql的基础知识，现在将要开始进入innodb引擎，从这里开始我们将开始代码的结构分析，innodb的内容分析之后，将反过来分析查询优化引擎。今天，我们先来讨论innodb缓冲区管理。文件：d:\mysql-5.1.7-beta\storage\innobase\include\buf0buf.hd:\mysql-5.1.7-beta\storage\innobase\b<a href="../201007/dba_1127.htm" title="思考mysql内核之初级系列4--innodb缓冲区管理 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/7/25 9:56:08</SPAN><a href="../201007/dba_1126.htm"  title="思考mysql内核之初级系列5---information_schema不是innodb数据字典 ">思考mysql内核之初级系列5---information_schema不是i...</a>  <LI   class="text">上次谈到了innodb缓冲区里面有些页被使用了，这些中有些被数据字典用了。那么什么是数据字典呢？bingxi和alex继续思考。1) information_schema不是innodb数据字典 bingxi：“alex，我觉得information_schema这个里面存储的不是数据字典，为了准确起见，换个说法，information_schema不是innodb数据字典。” alex：“是的，<a href="../201007/dba_1126.htm" title="思考mysql内核之初级系列5---information_schema不是innodb数据字典 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/7/25 20:15:09</SPAN><a href="../201007/dba_1125.htm"  title="思考mysql内核之初级系列6---innodb文件管理 ">思考mysql内核之初级系列6---innodb文件管理 </a>  <LI   class="text">在上一篇里面，bingxi和alex思考了information_schema，这个一直在innodb外围打转。没有进入到innodb的内部。在后续的文章中，以innodb的为主，逐个思考。bingxi和alex今天了解了fil文件管理。对应的文件为：d:\mysql-5.1.7-beta\storage\innobase\fil\fil0fil.cd:\mysql-5.1.7-beta\stor<a href="../201007/dba_1125.htm" title="思考mysql内核之初级系列6---innodb文件管理 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/7/25 20:19:35</SPAN><a href="../201007/dba_1124.htm"  title="思考mysql内核之初级系列7---innodb的hash表实现 ">思考mysql内核之初级系列7---innodb的hash表实现 </a>  <LI   class="text">在上一篇里面，bingxi和alex谈到了文件系统管理，在结构体里面出现了两个常用的结构：hash_table_t、ut_list_node_t。这两个结构比较常用，在本篇里面，bingxi和alex聊了下关于hash_table_t的内容。对应的文件为：d:\mysql-5.1.7-beta\storage\innobase\ha\hash0hash.cd:\mysql-5.1.7-beta\s<a href="../201007/dba_1124.htm" title="思考mysql内核之初级系列7---innodb的hash表实现 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/8/1 20:05:50</SPAN><a href="../201008/dba_1122.htm"  title="思考mysql内核之初级系列8---innodb的list算法 ">思考mysql内核之初级系列8---innodb的list算法 </a>  <LI   class="text"> 在上一篇里，bingxi和alex聊了下关于hash表的内容。在本篇里，会聊下关于list的内容。所谓list，就是双向链表，这样的算法在《数据结构》里面都是常见的。为了屏蔽差异性，类似于hash表，mysql将list通过宏来实现。 对应的文件为：d:\mysql-5.1.7-beta\storage\innobase\include\ut0lst.h1)常用结构体 alex：“bingxi，<a href="../201008/dba_1122.htm" title="思考mysql内核之初级系列8---innodb的list算法 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='zt_14_1.htm' title='回到第一页'>首页</a><a href='zt_14_4.htm' title='上一页'>上一页</a><a href='zt_14_1.htm' title='第1页'>1</a><a href='zt_14_2.htm' title='第2页'>2</a><a href='zt_14_3.htm' title='第3页'>3</a><a href='zt_14_4.htm' title='第4页'>4</a><span class="current">5</span><a href='zt_14_6.htm' title='第6页'>6</a><a href='zt_14_7.htm' title='第7页'>7</a><a href='zt_14_8.htm' title='第8页'>8</a><a href='zt_14_9.htm' title='第9页'>9</a><a>...</a><a href='zt_14_6.htm' title='下一页'>下一页</a><a href='zt_14_11.htm' title='尾页'>尾页</a><input type="hidden" value="5" id="page">&nbsp;&nbsp;<strong>分页：5/11页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
