<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>专题报道：《存储引擎InnoDB》 - 数据库管理员DBA学习网站 </title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li><li><a href="../zt/l_index_1.htm" class="hover">网站专题</a></li></ul><ul class="sub"><li><a  href="../zt/l_sqlserver_1.htm" title="SQLServer专题">SQLServer</a>|</li><li><a  href="../zt/l_Oracle_1.htm" title="Oracle专题">Oracle</a>|</li><li><a  href="../zt/l_mysql_1.htm" title="MySQL专题">MySQL</a>|</li><li><a  href="../zt/l_othersql_1.htm" title="其他数据库专题">其他数据库</a>|</li><li><a  href="../zt/l_yunwei_1.htm" title="系统运维专题">系统运维</a>|</li><li><a  href="../zt/l_kaoshi_1.htm" title="DBA考试专题">DBA考试</a>|</li><li><a  href="../zt/l_dbahuati_1.htm" title="DBA话题专题">DBA话题</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../zt/l_index_1.htm">网站专题</a>&nbsp;&gt;&nbsp; <a href="../zt/l_mysql_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="zt_14_1.htm">存储引擎InnoDB</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <div class="d2"><h1>专题报道：《存储引擎InnoDB》</h1><span>InnoDB 是 MySQL 上第一个提供外键约束的数据存储引擎，除了提供事务处理外，InnoDB 还支持行锁，提供和 Oracle 一样的一致性的不加锁读取，能增加并发读的用户数量并提高性能，不会增加锁的数量。InnoDB 的设计目标是处理大容量数据时最大化性能，它的 CPU 利用率是其他所有基于磁盘的关系数据库引擎中最有效率的。</span></div><UL><LI class=list_title><SPAN>2012/3/12 23:50:44</SPAN><a href="../201203/dba_971.htm"  title="MySQL数据库InnoDB数据恢复工具使用总结 ">MySQL数据库InnoDB数据恢复工具使用总结 </a>  <LI   class="text">本文从实际使用经验出发，介绍一款开源的mysql数据库innodb数据恢复工具：innodb-tools，它通过从原始数据文件中提取表的行记录，实现从丢失的或者被毁坏的mysql表中恢复数据。例如，当你不小心执行drop table、truncate table或者drop database之后，可以通过以下方式恢复数据。以下内容大部分参考自：percona data recovery tool <a href="../201203/dba_971.htm" title="MySQL数据库InnoDB数据恢复工具使用总结 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：jiuling.ypf</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/18 23:25:06</SPAN><a href="../201203/dba_970.htm"  title="MySQL数据库之枚举数据类型ENUM的DDL变更测试 ">MySQL数据库之枚举数据类型ENUM的DDL变更测试 </a>  <LI   class="text">【导读】针对四种数据类型：布尔类型bool或称布尔类型boolean、微整型tinytint、枚举类型enum、集合类型set，我们已经分多篇文章篇幅给出详细的介绍与功能测试数据，接下来我们深入介绍枚举类型eunm和集合类型set。测试基于innodb存储引擎上，对mysql数据库枚举类型enum的字段进行ddl变更操作，是否需要重新创建表呢？对数据库的事务处理有何影响？对数据库的数据服务提供有何<a href="../201203/dba_970.htm" title="MySQL数据库之枚举数据类型ENUM的DDL变更测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/18 23:33:48</SPAN><a href="../201203/dba_968.htm"  title="MySQL数据库之数据类型集合类型和枚举类型测试环境 ">MySQL数据库之数据类型集合类型和枚举类型测试环境 </a>  <LI   class="text">【导读】针对四种数据类型：布尔类型bool或称布尔类型boolean、微整型tinytint、枚举类型enum、集合类型set，我们已经分多篇文章篇幅给出详细的介绍与功能测试数据，接下来我们深入介绍枚举类型eunm和集合类型set。测试基于innodb存储引擎上，对mysql数据库集合类型set和枚举类型enum的字段进行ddl变更操作，是否需要重新创建表呢？对数据库的事务处理有何影响？对数据库的<a href="../201203/dba_968.htm" title="MySQL数据库之数据类型集合类型和枚举类型测试环境 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：MySQLOPS 数据库与运维自动化技术分享</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/19 23:40:40</SPAN><a href="../201203/dba_965.htm"  title="MySQL数据库之集合类型SET的DDL变更测试总结 ">MySQL数据库之集合类型SET的DDL变更测试总结 </a>  <LI   class="text">【导读】针对四种数据类型：布尔类型bool或称布尔类型boolean、微整型tinytint、枚举类型enum、集合类型set，我们已经分多篇文章篇幅给出详细的介绍与功能测试数据，接下来我们深入介绍枚举类型eunm和集合类型set。测试基于innodb存储引擎上，对mysql数据库集合类型set的字段进行ddl变更操作，是否需要重新创建表呢？对数据库的事务处理有何影响？对数据库的数据服务提供有何性<a href="../201203/dba_965.htm" title="MySQL数据库之集合类型SET的DDL变更测试总结 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：MySQLOPS 数据库与运维自动化技术分享</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/26 22:14:44</SPAN><a href="../201203/dba_962.htm"  title="mysql技术内幕-innodb存储引擎读书笔记(上) ">mysql技术内幕-innodb存储引擎读书笔记(上) </a>  <LI   class="text">第一章、mysql体系结构和存储引擎1.1、数据库和实例的区别 数据库：物理操作系统或其他形式文件类型的集合。在mysql下数据库文件可以是frm，myd，myi，ibd结尾的文件。 数据库实例：由数据库后台进程/线程以及一个共享内存区组成。 mysql数据库是但进程多线程的程序。1.2、mysql的体系结构 mysql由连接池组件、管理服务和工具组件、sql接口组建、查询分析器组件、优化器组件、<a href="../201203/dba_962.htm" title="mysql技术内幕-innodb存储引擎读书笔记(上) ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：ISADBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/26 22:15:37</SPAN><a href="../201203/dba_961.htm"  title="mysql技术内幕-innodb存储引擎读书笔记(中) ">mysql技术内幕-innodb存储引擎读书笔记(中) </a>  <LI   class="text">第四章、表 4.1、innodb存储引擎表类型 innodb表类似oracle的iot表(索引聚集表-indexorganized table)，在innodb表中每张表都会有一个主键，如果在创建表时没有显示的定义主键则innodb如按照如下方式选择或者创建主键。 首先表中是否有唯一非空索引(unique not null)，如果有则该列即为主键。 不符合上述条件，innodb存储引擎会自动创建一<a href="../201203/dba_961.htm" title="mysql技术内幕-innodb存储引擎读书笔记(中) ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：ISADBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/26 22:15:55</SPAN><a href="../201203/dba_960.htm"  title="mysql技术内幕-innodb存储引擎读书笔记(下) ">mysql技术内幕-innodb存储引擎读书笔记(下) </a>  <LI   class="text">第六章、锁 锁是区别文件系统和数据库系统的一个关键特性。 6.1、什么是锁？ 锁是用来管理对共享文件的并发访问。innodb会在行级别上对数据库上锁。不过innodb存储引擎会在数据库内部其他多个地方使用锁，从而允许对不同资源提供并发访问。例如操作缓冲池中的lru列表，删除，添加，移动lru列表中的元素，为了保证一致性，必须有锁的介入。 6.2、innodb存储引擎中的锁 6.2.1、锁的类型 s<a href="../201203/dba_960.htm" title="mysql技术内幕-innodb存储引擎读书笔记(下) ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：ISADBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/31 23:33:54</SPAN><a href="../201203/dba_956.htm"  title="MySQL5.5数据库innodb_change_buffering怪异问题分析 ">MySQL5.5数据库innodb_change_buffering怪异问题分析 </a>  <LI   class="text">【导读】 最近我们接手一个第三方开发的游戏运维，所有的安装文档和软件包及配置参数都是第三方提供的，其中数据库部分使用的mysql官方开源版本mysql5.5.20,配置文件也是第三方提供的，我们在部署第一个区服后，按自己使用mysql5.1版本数据库的经验来初步优化mysql数据库的配置文件my.cnf,其中主要是启用了innodb_file_per_table,并且修改innodb_flush_<a href="../201203/dba_956.htm" title="MySQL5.5数据库innodb_change_buffering怪异问题分析 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="14" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：ruochen</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='zt_14_1.htm' title='回到第一页'>首页</a><a href='zt_14_9.htm' title='上一页'>上一页</a><a>...</a><a href='zt_14_6.htm' title='第6页'>6</a><a href='zt_14_7.htm' title='第7页'>7</a><a href='zt_14_8.htm' title='第8页'>8</a><a href='zt_14_9.htm' title='第9页'>9</a><span class="current">10</span><a href='zt_14_11.htm' title='第11页'>11</a><a href='zt_14_11.htm' title='下一页'>下一页</a><a href='zt_14_11.htm' title='尾页'>尾页</a><input type="hidden" value="10" id="page">&nbsp;&nbsp;<strong>分页：10/11页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
