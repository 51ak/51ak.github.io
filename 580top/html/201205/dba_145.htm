<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Mysql 教程：数据库中表和列的取名技巧</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
<meta name="description" content="其实在数据库中创建对象时，管理员也要对其进行命名。一些有经验的数据库管理员，对其命名也会小心翼翼。既要能够叫的响亮，又要能够代表具体的应用场景。有时候对表等数据库对象进行命名的时候，可能比维护数据库还要伤脑筋。笔者对此就有非常深的感受。在数据库设计的时候，一套命名规则编制下来，脑袋就会觉得很累。不过等大家多编制几套后，就会掌握其中的规律。熟能生巧，掌握了规律再去取名的话，就会简单许多。有时候甚至可Mysql 教程：数据库中表和列的取名技巧" />

</head>

<body>

<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />

  </div>
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  
  <div class='div_tab_tab'>
	<div id="div_login_title">通行证登录</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
              &nbsp;</div>     
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
     

    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  		
          
                        <div id="contentdiv">                            
                     <div id="atTitle"><h1>Mysql 教程：数据库中表和列的取名技巧</h1></div>
					<div id="atSource"> 作者：[网上资料 ] </div>
					
                    <div id="viewcontent">
                   其实在数据库中创建对象时，管理员也要对其进行命名。一些有经验的数据库管理员，对其命名也会小心翼翼。既要能够叫的响亮，又要能够代表具体的应用场景。有时候对表等数据库对象进行命名的时候，可能比维护数据库还要伤脑筋。笔者对此就有非常深的感受。在数据库设计的时候，一套命名规则编制下来，脑袋就会觉得很累。不过等大家多编制几套后，就会掌握其中的规律。熟能生巧，掌握了规律再去取名的话，就会简单许多。有时候甚至可以信手拿来。笔者这次就跟大家分享一下对数据库对象进行命名的一些规律。简单起见，笔者以数据库对象表为例，谈谈命名的一些技巧。&nbsp;&nbsp;&nbsp; 一、牢记命名空间&nbsp;&nbsp;&nbsp; 在<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据库中，跟<a href="../../html/sqlsql/l_25_1.htm" title="其他" >其他</a>的数据库不同，有一个叫做命名空间的概念。在同一个命名空间中，其名字不可以重复。如表与视图就共享同一个命名空间，为此就要求不仅表的名字不能够相同，而且表的名字与视图的名字也不能够相同。因为他们处于同一个命名空间。类似的，表与函数也是同处于一个表空间，为此他们也不能够同名。不过表与索引、表与约束等等却属于不同的命名空间。也就是说，表的名字可以与约束的名字相同。所以说，数据库管理员在给表等对象命名的时候，一定要了解哪些对象共享同一个名称空间。如果在同一个名称空间内的，即使对象不同（如视图与表），但是他们仍然不能够取相同的名字。&nbsp;&nbsp;&nbsp; 为了避免同一个命名空间内重名的现象，笔者建立在命名的时候最好能够根据对象的不同加上对象的固有前缀。如大部分的数据库管理员，在给表取名的时候，一般不会表名前面加上表对象的前缀。但是在定义函数或者视图对象的时候，则会加上前缀。如在函数前面可能会加上FN的前缀，而在视图前面可能会加上vi的前缀。如此的话，在同一个命名空间内也不用担心对象重名的问题。不过无论怎么说，这个命名空间的概念数据库管理员必须牢记。即使在实际的工作中，可以通过前缀等手段轻易的避免这个陷阱，但是在<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据库管理员的认证考试中，这个命名空间也是一个必要的知识点。所以无论从实际的工作还是认证考试的需要，对于这个命名空间管理员都必须要有一个清晰的认识。&nbsp;&nbsp;&nbsp; 二、表名大小写的控制&nbsp;&nbsp;&nbsp; 一般情况下<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据库中的表名或者列名是不区分大小写的。在创建表或者列的时候，即使管理员采用了小写的名字，数据库在将其保存到数据字典之前，会先将其转换为大写，再将他们保存到数据字典中。这也就是为什么我们命名使用小写的子母命名，但是下次查看表的名字的时候，却变成了大写。&nbsp;&nbsp;&nbsp; 虽然说<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据库中表与列等数据库对象对于大小写是不敏感的，但是如果数据库管理员确实有需要要让数据库系统对表的名字区分大小写，这也是可以做到的。通常情况下，如果把名字使用双引号括起来，则在<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据字典中就会成为区分大小写的名字。不过笔者这里要提醒各位数据库管理员，虽然说从技术上可以让数据库系统强制取分大小写，但是在实际工作中，包括在内的绝大部分数据库管理员可能都不建议这么做。因为如果有混合的大小写存在，那么在引用这些表或者列名称的时候就需要特别的小心。因为即使用户或者数据库管理员有着过目不忘的本领，也很难准确的记住这些名称的大小写歌时。如果数据库管理员硬要这么做的话，那么很可能是自寻烦恼。在查询时或者<a href="../../html/sqlsql/l_25_1.htm" title="其他" >其他</a>作业时，要严格区分大小写那是一件很头疼的事情。为此，对于这个大小写的控制，笔者建议数据库管理员要谨慎使用。除非有充分的理由，否则的话，不要轻易使用这个双引号来控制大小写。&nbsp;&nbsp;&nbsp; 这个双引号不仅可以用来控制大小写，还有一个比较特殊的作用，就是用引用一些特殊的字符。如在建立表格的时候，需要设置一个名牌号的字段。有些数据库管理员习惯使用num#类似的名称。这不会违反数据库的命名规则。不过在处理的时候会比较麻烦。如利用create语句建立表格的时候，需要给这个字段名称加上双引号。否则的话，执行这条语句的时候，数据库会拒绝执行并向用户提示错误信息。类似的特殊符号还包括一个$美元符号。他们在建立表格的时候，在语句中都需要使用双引号。不过字段建立好之后，在引用这些对象的时候，不需要使用双引号了。同理，虽然<a href="../../html/Oracle/l_7_1.htm" title="Oracle" >Oracle</a>数据库支持这些特殊符号，但是笔者不鼓励数据库管理员在表或者列的命名中采取这些特殊的符号。这有可能给后续的引用带来不必要的麻烦。
																	|
</div>  
 
                    </div>
                    <hr class="hrdt" />	
<div id="res"></div>
                        
                        </div>

<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
