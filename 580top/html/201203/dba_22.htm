<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Mysql主要配置参数1:table_cache 表缓存</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
<meta name="description" content="Mysql主要参数在优化MySQL时，有两个配置参数是最重要的，即table_cache和key_buffer_size。而具体到应用环境还有个查询参数query_cache_size直接影响查询性能。下面主要是整理的关于下面三个参数的文章1．table_cache表缓存2．key_buffer_size键缓冲3．query_cache_size查询缓存4．其他参数5．Mysql主要配置参数1:table_cache 表缓存" />

</head>

<body>

<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识">基础知识</a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化"><span class="zc_666">性能与优化</span></a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />

  </div>
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlyouhua/l_16_1.htm">性能与优化</a></div>
  <div id="sidebar1">

  
  <div class='div_tab_tab'>
	<div id="div_login_title">通行证登录</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
              &nbsp;</div>     
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
     

    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  		
          
                        <div id="contentdiv">                            
                     <div id="atTitle"><h1>Mysql主要配置参数1:table_cache 表缓存</h1></div>
					<div id="atSource"> 作者：[51ak ] </div>
					
                    <div id="viewcontent">
                   <p><font face="Arial"><a href="../../html/mysql/l_13_1.htm" title="Mysql" >Mysql</a>主要参数<br />
在优化MySQL时，有两个配置参数是最重要的，即table_cache和key_buffer_size。而具体到应用环境还有个查询参数query_cache_size直接影响查询性能。下面主要是整理的关于下面三个参数的文章<br />
1．<a href="../../html/201203/dba_22.htm">table_cache 表缓存</a><br />
2．<a href="../../html/201203/dba_23.htm">key_buffer_size 键缓冲</a><br />
3．<a href="../../html/201203/dba_24.htm">query_cache_size查询缓存</a><br />
4．<a href="../../html/201203/dba_25.htm"><a href="../../html/sqlsql/l_25_1.htm" title="其他" >其他</a>参数</a><br />
5．<a href="../../html/201203/dba_26.htm">参考文章</a></font></p>
<p><font face="Arial">首先，在了解这些参数设置前需要明确的概念是<br />
&bull; 什么是<a href="../../html/<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>/l_13_1.htm" title="MYSQL" >MYSQL</a>的缓存：在内存中预留的块<br />
&bull; 访问内存中的数据快于访问磁盘上的数据。<br />
&bull; 把数据保存在内存中更重要的是可以减少磁盘IO操作。<br />
&bull; 当数据变化(update insert delete...)时对应的缓存就失效<br />
&bull; 内存是有限的</font></p>
<p><font face="Arial">1、table_cache 表缓存<br />
table_cache指示表高速缓存的大小。当<a href="../../html/mysql/l_13_1.htm" title="Mysql" >Mysql</a>访问一个表时，如果在<a href="../../html/mysql/l_13_1.htm" title="Mysql" >Mysql</a>表缓冲区中还有空间，那么这个表就被打开并放入表缓冲区，这样做的好处是可以更快速地访问表中的内容。一般来说，可以通过查看数据库运行峰值时间的状态值Open_tables和Opened_tables，用以判断是否需要增加table_cache的值，即如果open_tables接近table_cache的时候，并且Opened_tables这个值在逐步增加，那就要考虑增加这个值的大小了。<br />
在<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>默认安装情况下，table_cache的值在2G内存以下的机器中的值默认时256到512，如果机器有4G内存,则默认这个值是2048，但这决意味着机器内存越大，这个值应该越大，因为table_cache加大后，使得<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>对SQL响应的速度更快了，不可避免的会产生更多的死锁（dead lock），这样反而使得数据库整个一套操作慢了下来，严重影响性能。所以平时维护中还是要根据库的实际情况去作出判断，找到最适合你维护的库的table_cache值<br />
当服务器打开表文件的时候，它试图保持这些文件的打开状态，以减少打开文件操作的数量。为了实现这样的功能，它在表缓存中维护打开文件的信息。table_cache系统变量控制着这个缓存的大小。如果服务器访问了大量的表，表缓存就会被填满，并且服务器会关闭那些有一段时间没有使用的表，为打开新表留出空间。你可以通过检查Opened_tables状态指示器来访问表缓存的效果：<br />
SHOW STATUS LIKE &rsquo;Opened_tables&rsquo;;<br />
Opened_tables显示了某个数据表必须打开的次数（因为它还没有打开）。这个值也显示为<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>admin状态命令的输出信息中的Opens值。如果这个数字是稳定的或缓慢增长，那么它的设置可能是正确的。如果这个数字增长得很快，就意味着这个缓存太小了，必须经常关闭数据表来为打开其它的数据表留出空间。如果你拥有文件描述信息，增加表缓存大小将减少数据表打开操作的数量。<br />
# 注意，不能盲目地把table_cache设置成很大的值。如果设置得太高，可能会造成文件描述符不足，从而造成性能不稳定或者连接失败。<br />
<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>手册上给的建议大小是:table_cache=max_connections*n<br />
n表示查询语句中最大表数,还需要为临时表和文件保留一些额外的文件描述符。<br />
这个数据遭到很多质疑,table_cache够用就好,检查Opened_tables值,如果这个值很大,或增长很快那么你就得考虑加大table_cache了.<br />
在下面的条件下，未使用的表将被关闭并从表缓存中移出：<br />
&bull; 当缓存满了并且一个线程试图打开一个不在缓存中的表时。<br />
&bull; 当缓存包含超过table_cache个条目，并且缓存中的表不再被任何线程使用。<br />
&bull; 当表刷新操作发生。当执行FLUSH TABLES语句或执行<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>admin flush-tables或<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>admin refresh命令时会发生。<br />
当表缓存满时，服务器使用下列过程找到一个缓存入口来使用：<br />
&bull; 当前未使用的表被释放，以最近最少使用顺序。<br />
&bull; 如果缓存满了并且没有表可以释放，但是一个新表需要打开，缓存必须临时被扩大。<br />
如果缓存处于一个临时扩大状态并且一个表从在用变为不在用状态，它被关闭并从缓存中释放。<br />
几个关于table_cache的状态值:<br />
1&nbsp; table_cache：所有线程打开的表的数目。增大该值可以增加<a href="../../html/mysql/l_13_1.htm" title="mysql" >mysql</a>d需要的文件描述符的数量。默认值是64.<br />
2&nbsp; open_tables：当前打开的表的数量.<br />
3&nbsp; opened_tables ：Number of table cache misses，如果opened_tables较大，table_cache 值可能太小.<br />
4&nbsp; Open_table_definitions : The number of cached .frm files. This variable was added in MySQL 5.1.3.<br />
5&nbsp; Opened_table_definitions : The number of .frm files that have been cached. This variable was added in MySQL 5.1.24.<br />
</div>  
 
                    </div>
                    <hr class="hrdt" />	
<div id="res"></div>
                        
                        </div>

<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
