<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第30页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2010/3/18 9:02:29</SPAN><a href="../201003/dba_1189.htm"  title="MySQL不同分支版本的压力测试 ">MySQL不同分支版本的压力测试 </a>  <LI   class="text">压力测试的目的：通过压力测试了解一下不同发行版本的性能区别。mysql不的版本测试,mysql同样的配置具体版本如下：mysql-5.1.42企业版＋innodb-pluginmysql-5.1.42企业版＋默认的innodbmysql-5.1.43开源版+ innodb-pluginmysql-5.1.43 percona压力设置创建一个1kw的innodb表,使用16个并发去进行读取写入更新事<a href="../201003/dba_1189.htm" title="MySQL不同分支版本的压力测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/3/15 13:47:45</SPAN><a href="../201003/dba_1190.htm"  title="[MySQL FAQ]系列 -- 如何跨时区迁移数据 ">[MySQL FAQ]系列 -- 如何跨时区迁移数据 </a>  <LI   class="text">问： 如果数据表中有时间字段，现在要迁移到其他时区的服务器上，该如何处理呢？答：在高版本的mysqldump中，新增了一个选项：--tz-utc，默认是启用的，来看看它的说明set time_zone='+00:00' at top of dump to allow dumping oftimestamp data when a server has data in different timez<a href="../201003/dba_1190.htm" title="[MySQL FAQ]系列 -- 如何跨时区迁移数据 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：yejr</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/3/11 9:18:39</SPAN><a href="../201003/dba_1191.htm"  title="使用percona的mysql补丁统计Mysql使用情况 ">使用percona的mysql补丁统计Mysql使用情况 </a>  <LI   class="text">在应用粒度进行mysql服务的管理相对简单,只要把mysql账号和应用账号绑定起来就可以了.mysql账号的管理可以通过向mysql库user表增删记录来实现.要想给某个用户只分配特定库的权限时,可以将user表中权限字段全部设置为n,然后向mysql库下的db表添加记录指定特定库权限.接来下我们讨论如何获取详细的mysql使用信息,例如某个账号的数据库大小,写入字节数和读取字节数,累计消耗的cp<a href="../201003/dba_1191.htm" title="使用percona的mysql补丁统计Mysql使用情况 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Easy</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/3/9 9:11:31</SPAN><a href="../201003/dba_1192.htm"  title="mysqldump 导出/导入数据库/表 ">mysqldump 导出/导入数据库/表 </a>  <LI   class="text">mysqldump客户端可用来转储数据库或搜集数据库进行备份或将数据转移到另一个sql服务器(不一定是一个mysql服务器)。转储包含创建表和/或装载表的sql语句。有3种方式来调用mysqldump：shell&gt; mysqldump [options] db_name [tables]shell&gt; mysqldump [options] ---database db1 [db2 db<a href="../201003/dba_1192.htm" title="mysqldump 导出/导入数据库/表 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：zhoz &lt;zhozweb@yahoo.com.cn&gt;</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/3/2 9:07:58</SPAN><a href="../201003/dba_1194.htm"  title="Memcached and MySQL ">Memcached and MySQL </a>  <LI   class="text">　　相信很多开发人员接触过memcached,而且我认识的朋友当中有的是经常使用。那么在结合数据库，在对数据库内容做缓存的时候什么情况下使用memcached却不甚了解。有些朋友问到mysql有自己的query cache，为什么还要用memcached？ -by ivan@mysqlab.net　　mysql为了效率考虑，不太可能将数据粒度分那么细，所以在对表更新的时候将清空所有涉及到这张表的q<a href="../201003/dba_1194.htm" title="Memcached and MySQL ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：谭俊青</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/3/1 14:01:29</SPAN><a href="../201003/dba_1195.htm"  title="InnoDB Double write ">InnoDB Double write </a>  <LI   class="text">记得刚开始看innodb文档的时候，double write一节（其实只有一小段）就让我很困惑。无奈当时内力太浅，纠缠了很久也没弄明白。时隔几个月，重新来整理一下。涉及到的概念：buffer pool简称bp，dirty page，log file，flush，innodb tablespace。1. 什么是double write在innodb将bp中的dirty page刷（flush）到磁盘<a href="../201003/dba_1195.htm" title="InnoDB Double write ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：DBA@Taobao</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/2/26 9:04:48</SPAN><a href="../201002/dba_1198.htm"  title="Cassandra存储机制 ">Cassandra存储机制 </a>  <LI   class="text">在2009年兴起的nosql运动中，cassandra是其中重要的一个分布式key-value数据库产品，由facebook在2008年开源，目前是apache的顶级项目。最近twitter的一篇声明，表示将从mysql迁移到cassandra，更让其声名大振。cassandra是结合了google bigtable的数据模型和amazon dynamo高可用框架的一个产品。其数据模型可以参考张瑞<a href="../201002/dba_1198.htm" title="Cassandra存储机制 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：NinGoo</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/2/25 22:43:52</SPAN><a href="../201002/dba_1199.htm"  title="如何配置MySQL SemiSyncReplication ">如何配置MySQL SemiSyncReplication </a>  <LI   class="text">semisyncreplication是google提供的一个mysql patch，作用在于保证至少有一个slave完成了数据同步。安装的过程很简单，但是要找对路。这里提供一个传送门，看完就会编译安装了：http://www.realzyy.com/?p=178semisyncreplication需要的mysql源码包为mysql-5.0.37.tar.gz;需要的patch为mysql-5.<a href="../201002/dba_1199.htm" title="如何配置MySQL SemiSyncReplication ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：DBA@Taobao</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_29.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_26.htm' title='第26页'>26</a><a href='l_14_27.htm' title='第27页'>27</a><a href='l_14_28.htm' title='第28页'>28</a><a href='l_14_29.htm' title='第29页'>29</a><span class="current">30</span><a href='l_14_31.htm' title='第31页'>31</a><a href='l_14_32.htm' title='第32页'>32</a><a href='l_14_33.htm' title='第33页'>33</a><a href='l_14_34.htm' title='第34页'>34</a><a>...</a><a href='l_14_31.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="30" id="page">&nbsp;&nbsp;<strong>分页：30/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
