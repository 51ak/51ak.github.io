<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第21页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2010/9/14 8:58:40</SPAN><a href="../201009/dba_1105.htm"  title="MySQL Cluster Manager 工作原理、安装及使用 ">MySQL Cluster Manager 工作原理、安装及使用 </a>  <LI   class="text">mysql cluster使用不那么广泛，除了自身构架因素、适用的业务有限之外，另一个重要的原因是其安装配置管理相对复杂繁琐，总共有几十个操作步骤，需要dba花费几个小时才能搭建或完成升级。mysql cluster 7.1推出了mysql cluster manager,mysql cluster的安装、升级管理等操作，将dba原本需要几个小时的工作，节省到通过若干个命令即可完成，还能避免操作的<a href="../201009/dba_1105.htm" title="MySQL Cluster Manager 工作原理、安装及使用 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：谭俊青</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/12 23:53:50</SPAN><a href="../201009/dba_1106.htm"  title="控制mysql用户连接数据库数目 ">控制mysql用户连接数据库数目 </a>  <LI   class="text">对于mysql用户权限一般都喜欢用grant all privileges on huzi.* to ‘xxx’@'localhost’ identified by ‘xxx’ 来授权用户。之前由于程序的bug 并发index.php就可以把数据库给弄死，由于程序是加密，也不提供太多技术支持，再笨的攻击者随便就可以让网站陷入瘫痪。官方提供的技术支持是rewrite 可是，弄了这个以后 后台登录发布<a href="../201009/dba_1106.htm" title="控制mysql用户连接数据库数目 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：虎子</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/9 21:53:27</SPAN><a href="../201009/dba_1107.htm"  title="为 MySQL 增加 HTTP/REST 客户端：MySQL UDF 函数 mysql-udf-http 1.0 发布 ">为 MySQL 增加 HTTP/REST 客户端：MySQL UDF 函数 mys...</a>  <LI   class="text">　　mysql-udf-http 是一款简单的mysql用户自定义函数（udf, user-defined functions），具有http_get()、http_post()、http_put()、http_delete()四个函数，可以在mysql数据库中利用http协议进行rest相关操作。　　项目网址：http://code.google.com/p/mysql-udf-http/　　中<a href="../201009/dba_1107.htm" title="为 MySQL 增加 HTTP/REST 客户端：MySQL UDF 函数 mysql-udf-http 1.0 发布 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：张宴</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/6 22:22:30</SPAN><a href="../201009/dba_1108.htm"  title="思考mysql内核之初级系列14---innodb的旧式记录结构 ">思考mysql内核之初级系列14---innodb的旧式记录结构 </a>  <LI   class="text">在上一篇里，bingxi和alex聊了关于簇页管理。innodb的记录分为新旧两种格式，在本篇里，bingxi和alex会讨论下innodb的旧式记录结构。对应的文件为：d:\mysql-5.1.7-beta\storage\innobase\rem\rem0rec.cd:\mysql-5.1.7-beta\storage\innobase\include\rem0rec.hd:\mysql-5.<a href="../201009/dba_1108.htm" title="思考mysql内核之初级系列14---innodb的旧式记录结构 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/6 22:20:32</SPAN><a href="../201009/dba_1109.htm"  title="思考mysql内核之初级系列13---innodb的簇页管理 ">思考mysql内核之初级系列13---innodb的簇页管理 </a>  <LI   class="text"> 在上一篇，bingxi和alex聊了关于簇描述结构。在本篇，bingxi和alex会讨论下簇页管理。所谓的簇页，就是用于管理簇结构的页。对应的文件为：d:\mysql-5.1.7-beta\storage\innobase\fsp\ fsp0fsp.cd:\mysql-5.1.7-beta\storage\innobase\include\ fsp0fsp.h1）每个页存放多少个簇描述结构 bi<a href="../201009/dba_1109.htm" title="思考mysql内核之初级系列13---innodb的簇页管理 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：yzyangwanfu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/5 23:35:59</SPAN><a href="../201009/dba_1111.htm"  title="基于MySQL的高可用可扩展架构探讨 ">基于MySQL的高可用可扩展架构探讨 </a>  <LI   class="text">注：原文已发表于《程序员》杂志关系型数据库60周年特刊随着信息量飞涨，信息的存储成为了这个时代至关重要的一项技术。如何来保证数据存储技术能够适应信息量的增长速度和我们对信息的高度依赖，成为一个非常重要的课题。本文将从数据库架构的层面，通过以开源的数据存储软件来构建分布式数据层的思路，期望实现一个低成本的高可用可扩展的数据层架构。传统数据库架构纵观各传统商业数据库软件，多以集中式架构为主，鲜有以分布<a href="../201009/dba_1111.htm" title="基于MySQL的高可用可扩展架构探讨 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：朝阳</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/8/31 23:26:00</SPAN><a href="../201008/dba_1112.htm"  title="浅谈数据库系统中的cache ">浅谈数据库系统中的cache </a>  <LI   class="text">cache和buffer是两个不同的概念，简单的说，cache是加速“读”，而buffer是缓冲“写”，前者解决读的问题，保存从磁盘上读出的数据，后者是解决写的问题，保存即将要写入到磁盘上的数据。在很多情况下，这两个名词并没有严格区分，常常把读写混合类型称为buffer cache，本文后续的论述中，统一称为cache。oracle中的log buffer是解决redo写入的问题，而data bu<a href="../201008/dba_1112.htm" title="浅谈数据库系统中的cache ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：jacky</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/8/31 23:19:05</SPAN><a href="../201008/dba_1113.htm"  title="MySQL锁管理(并发锁,行锁,表锁,预加锁,全局锁等等) ">MySQL锁管理(并发锁,行锁,表锁,预加锁,全局锁等等) </a>  <LI   class="text">1.mysql中并发和隔离控制机制meta-data元数据锁：在table cache缓存里实现的，为ddl（data definition language）提供隔离操作。一种特别的meta-data元数据类型，叫name lock。（sql层） 表级table-level数据锁（sql层） 存储引擎特有机制 ― row locks行锁，page locks页锁，table locks表级，版本<a href="../201008/dba_1113.htm" title="MySQL锁管理(并发锁,行锁,表锁,预加锁,全局锁等等) ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：谭俊青</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_20.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_17.htm' title='第17页'>17</a><a href='l_14_18.htm' title='第18页'>18</a><a href='l_14_19.htm' title='第19页'>19</a><a href='l_14_20.htm' title='第20页'>20</a><span class="current">21</span><a href='l_14_22.htm' title='第22页'>22</a><a href='l_14_23.htm' title='第23页'>23</a><a href='l_14_24.htm' title='第24页'>24</a><a href='l_14_25.htm' title='第25页'>25</a><a>...</a><a href='l_14_22.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="21" id="page">&nbsp;&nbsp;<strong>分页：21/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
