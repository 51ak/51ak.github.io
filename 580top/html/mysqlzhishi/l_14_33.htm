<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第33页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2009/12/18 23:32:15</SPAN><a href="../200912/dba_1220.htm"  title="mysql数据导出SQLserver格式的数据总结 ">mysql数据导出SQLserver格式的数据总结 </a>  <LI   class="text">我用php写的采集程序入库的数据都是mysql，用户可能要求给他的数据是access或sqlserver，这时侯就涉及到数据转换的过程，从网上找了一下要想mysql直接转成sqlserver的，得装mysql odbc driver，同时还得装sqlserver，这种方法我直接不考虑了。最后我想到方法是：mysql导出access在导出sqlserver1.mysql导入access文章地址：ht<a href="../200912/dba_1220.htm" title="mysql数据导出SQLserver格式的数据总结 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：kekehu &lt;misskekehu@sohu.com&gt;</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/17 9:12:02</SPAN><a href="../200912/dba_1221.htm"  title="NoSQL，关系数据库终结者？ ">NoSQL，关系数据库终结者？ </a>  <LI   class="text">作为一个dba，几年走过来，工作中历经ms sql server 2000/2005，oracle9i/10g/11g，mysql5.0/5.1等不同的数据库产品和版本，对于关系型数据库系统(rdbms)应该说有了一定的了解。从一个数据库切换到另外一个数据库，虽然有些许艰难，却谈不上抗拒，甚至乐意主动去深入了解其他的数据库产品。关系理论的成熟，造就了这三十年来关系数据库在数据领域的绝对地位。这两年<a href="../200912/dba_1221.htm" title="NoSQL，关系数据库终结者？ ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：NinGoo</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/16 12:21:50</SPAN><a href="../200912/dba_1222.htm"  title="MySQL半同步 : MySQL 5.5 Released ">MySQL半同步 : MySQL 5.5 Released </a>  <LI   class="text">　　mysql 5.5第一个版本释出，基于mysql5.4，性能相对于当前mysql5.0、5.1有很大的提升，更让人可喜的是mysql5.5内置了google的半同步（semi-sync-replication）补丁,以此可以搭建一个相对来说比较完美的mysql高可用方案,之前我已经在“mysql新版(5.x)及特性”中提到过，很是让人期待！mysql半同步流程设计图半同步的配置很简单：以下是代<a href="../200912/dba_1222.htm" title="MySQL半同步 : MySQL 5.5 Released ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：ivan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/15 22:29:11</SPAN><a href="../200912/dba_1223.htm"  title="Innodb文件表空间结构 ">Innodb文件表空间结构 </a>  <LI   class="text"> innodb的表空间是在配置文件中定义（说是表空间有时觉的有点羞愧，和oracle比真的差太远了），这里简单列一下表空间里的基本概念及表的分配情况。 表空间是在配置文件中定义的几个文件简单的耦合起来，在使用中互不可少（少一个就面临db完蛋的危险）。对于共享表空间无法确定表所在的表空间上。 独立表空间可以做到每个表有自已的表空间（羞一下）。 针对共享表空间，表空间中包括：回滚段,段（segment<a href="../200912/dba_1223.htm" title="Innodb文件表空间结构 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/14 12:22:36</SPAN><a href="../200912/dba_1224.htm"  title="MySQL中的定时执行 ">MySQL中的定时执行 </a>  <LI   class="text">查看event是否开启 show variables like \'%sche%\';将事件计划开启set global event_scheduler =1;创建存储过程test create procedure test () begin update examinfo set endtime = now() where id = 14; end; 创建event e_test create <a href="../200912/dba_1224.htm" title="MySQL中的定时执行 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：草原和大树</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/13 18:04:43</SPAN><a href="../200912/dba_1225.htm"  title="Innodb如何使用内存 ">Innodb如何使用内存 </a>  <LI   class="text">来源：http://www.mysqlperformanceblog.com/2006/05/30/innodb-memory-usage/译这个文章的目的：　　最近经常被问起innodb是如何使用内存的。该问题早已被原mysql公司的vadim论证过。我这里译一下他的文章供大家参考。开始：　　这里有许多关于innodb如何使用内存的问题。我这里将会以innodb启动时的分配情况做一个解释。一些重<a href="../200912/dba_1225.htm" title="Innodb如何使用内存 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/12 22:40:18</SPAN><a href="../200912/dba_1227.htm"  title="mysql的partition与auto_increment ">mysql的partition与auto_increment </a>  <LI   class="text">mysql 5.1之后，开始新增了partition功能，可以做到对代码透明的情况下进行数据分区。但是从实际使用中来看，限制颇多：如果用来分区的字段和主键不是同一个，则不能分区见很早前的一篇译文mysql 5.1新功能 －－ 按日期分区，如果查询条件中没有正确利用到分区的字段，那么partition的效果为零mysql 5.1.31之前的partition功能有较大的bug，会导致自增字段不能正常<a href="../200912/dba_1227.htm" title="mysql的partition与auto_increment ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Volcano</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/12 22:38:15</SPAN><a href="../200912/dba_1228.htm"  title="对MySQL 5.1.X使用请慎重 ">对MySQL 5.1.X使用请慎重 </a>  <LI   class="text">　　近段一直在一个项目中恶战，所以对于blog更新慢了一点。该项目中使用了mysql 5.1.x,使用这个版本是在我加入这个项目前就决定的。该项目基本上可以达到每秒3w的qps(大多是基于主建的等于逻辑读写)记录都是比较长的。近段遇到一些问题列举：　　使用mysql-5.1.31 进行数据迁移，从sql server到mysql迁移，共享表空间，每表一个线程，一次从sql server读取20条记<a href="../200912/dba_1228.htm" title="对MySQL 5.1.X使用请慎重 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_32.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_29.htm' title='第29页'>29</a><a href='l_14_30.htm' title='第30页'>30</a><a href='l_14_31.htm' title='第31页'>31</a><a href='l_14_32.htm' title='第32页'>32</a><span class="current">33</span><a href='l_14_34.htm' title='第34页'>34</a><a href='l_14_35.htm' title='第35页'>35</a><a href='l_14_36.htm' title='第36页'>36</a><a href='l_14_37.htm' title='第37页'>37</a><a>...</a><a href='l_14_34.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="33" id="page">&nbsp;&nbsp;<strong>分页：33/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
