<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第11页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2012/2/26 23:09:57</SPAN><a href="../201202/dba_981.htm"  title="MySQL数据库分布式事务XA的实现原理分析 ">MySQL数据库分布式事务XA的实现原理分析 </a>  <LI   class="text">1 原理关于mysql数据库的分布式事务xa，分布式事务实现的原理，可见[3];关于mysql xa的说明，可见[1][2]。mysql xa分为两类，内部xa与外部xa;内部xa用于同一实例下跨多个引擎的事务，由大家熟悉的binlog作为协调者;外部xa用于跨多mysql实例的分布式事务，需要应用层介入作为协调者(崩溃时的悬挂事务，全局提交还是回滚，需要由应用层决定，对应用层的实现要求较高);本<a href="../201202/dba_981.htm" title="MySQL数据库分布式事务XA的实现原理分析 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 22:50:57</SPAN><a href="../201202/dba_982.htm"  title="HandlerSocket返回错误码167的bug分析 ">HandlerSocket返回错误码167的bug分析 </a>  <LI   class="text">用handlersocket大量并发插入数据到多个innodb的表(都使用自增id)的时候就会大量出现167的错误,从而tps下降极为厉害.让我们来分析这个bug是怎么产生的.我们先来重现这个bug:先建两个表:create table test1 (id int(20) unsigned not null auto_increment,data varchar(200) default null<a href="../201202/dba_982.htm" title="HandlerSocket返回错误码167的bug分析 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：淘宝文通</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 22:20:12</SPAN><a href="../201202/dba_983.htm"  title="MySQL 备份和其恢复机制原理简述 ">MySQL 备份和其恢复机制原理简述 </a>  <LI   class="text"> 文章主要讨论的是 mysql 备份和其恢复机制，以及对维护数据表的正确维护，其中主要包括的两种不同表的类型有myisam与 innodb，文中所设计的 mysql 版本为 5.0.22。以下就是具体内容的描述。目前 mysql 支持的免费mysql 备份工具有：mysqldump、mysqlhotcopy，还可以用 sql 语法进行备份：backup table 或者 select into o<a href="../201202/dba_983.htm" title="MySQL 备份和其恢复机制原理简述 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：luckyyuan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 22:19:08</SPAN><a href="../201202/dba_984.htm"  title="MySQL数据库中的5种数据类型简介 ">MySQL数据库中的5种数据类型简介 </a>  <LI   class="text"> 以下的文章主要介绍的是mysql数据类型，mysql数据库中的5种数据类型是：字符型，文本型，数值型，逻辑型与日期型，以下就是文章的详细内容介绍，希望在你今后的学习中会有所帮助。mysql数据类型之一字符型varchar vs charvarchar型和char型数据的这个差别是细微的，但是非常重要。他们都是用来储存字符串长度小于255的字符。假如你向一个长度为四十个字符的varchar型字段中<a href="../201202/dba_984.htm" title="MySQL数据库中的5种数据类型简介 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：luckyyuan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 22:13:41</SPAN><a href="../201202/dba_985.htm"  title="获得MySQL命令行中常用命令的窍门 ">获得MySQL命令行中常用命令的窍门 </a>  <LI   class="text"> 此文章主要介绍的是获得mysql命令行中常用命令的小招数，如果你掌握了获得mysql命令行中常用命令的小招这项技术，会在以后的学习或是工作中带来很大的帮助。以下就是文章的主要内容描述。mysql命令行常用命令 第一招、mysql服务的启动和停止net stop mysqlnet start mysqlmysql命令行常用命令 第二招、登陆mysql语法如下： mysql -u用户名 -p用户密码<a href="../201202/dba_985.htm" title="获得MySQL命令行中常用命令的窍门 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：luckyyuan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 22:12:19</SPAN><a href="../201202/dba_986.htm"  title="不使用MySQL数据库的五个给力理由 ">不使用MySQL数据库的五个给力理由 </a>  <LI   class="text"> 　首先我们要知道，或许有一项技术存在很多理由让我们可以选择使用它，但是让我们不使用它往往只要有一个理由就足够了。选择一个软件产品同样也是如此。 mysql数据库虽然应用很广泛，受到大家的青睐，但mysql数据库也有负面的作用，下面就介绍五个不适用 mysql数据库的给力理由。1、mysql(和php搭配之最佳组合)的授权方式 mysql(和php搭配之最佳组合)采用双重授权(dual licen<a href="../201202/dba_986.htm" title="不使用MySQL数据库的五个给力理由 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：luckyyuan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/27 18:08:39</SPAN><a href="../201201/dba_989.htm"  title="在Server层实现Kill Idle Transaction ">在Server层实现Kill Idle Transaction </a>  <LI   class="text">在上一篇文章里我们写了如何针对innodb清理空闲事务《如何杀掉空闲事务》，在@sleebin9 的提示下，这个功能不仅可以针对innodb，也可以用于所有mysql的事务引擎。如何在server层实现呢，sql/sql_parse.cc的do_command()函数是个好函数，连接线程会循环调用do_command()来读取并执行命令，在do_command()函数中，会调用my_net_set<a href="../201201/dba_989.htm" title="在Server层实现Kill Idle Transaction ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：P.Linux</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/1/26 11:20:13</SPAN><a href="../201201/dba_990.htm"  title="一线DBA总结：MySQL搭配XFS文件系统优势最大 ">一线DBA总结：MySQL搭配XFS文件系统优势最大 </a>  <LI   class="text">来自国外问答sns网站quora的一个问题：xfs、zfs和ext3这3个文件系统哪个能够与mysql产生最佳的性能?对此，来自facebook的资深数据库专家domas mituzas给出了自己的解答，他认为mysql最适合xfs文件系统。在xfs文件系统的linux版本发布之前，选择适合的linux文件系统很简单，追求原始性能通常倾向于使用reiserfs，而重视数据完整性则首 选ext3。x<a href="../201201/dba_990.htm" title="一线DBA总结：MySQL搭配XFS文件系统优势最大 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_10.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_7.htm' title='第7页'>7</a><a href='l_14_8.htm' title='第8页'>8</a><a href='l_14_9.htm' title='第9页'>9</a><a href='l_14_10.htm' title='第10页'>10</a><span class="current">11</span><a href='l_14_12.htm' title='第12页'>12</a><a href='l_14_13.htm' title='第13页'>13</a><a href='l_14_14.htm' title='第14页'>14</a><a href='l_14_15.htm' title='第15页'>15</a><a>...</a><a href='l_14_12.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="11" id="page">&nbsp;&nbsp;<strong>分页：11/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
