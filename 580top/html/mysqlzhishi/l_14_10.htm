<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第10页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2012/3/12 23:50:44</SPAN><a href="../201203/dba_971.htm"  title="MySQL数据库InnoDB数据恢复工具使用总结 ">MySQL数据库InnoDB数据恢复工具使用总结 </a>  <LI   class="text">本文从实际使用经验出发，介绍一款开源的mysql数据库innodb数据恢复工具：innodb-tools，它通过从原始数据文件中提取表的行记录，实现从丢失的或者被毁坏的mysql表中恢复数据。例如，当你不小心执行drop table、truncate table或者drop database之后，可以通过以下方式恢复数据。以下内容大部分参考自：percona data recovery tool <a href="../201203/dba_971.htm" title="MySQL数据库InnoDB数据恢复工具使用总结 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：jiuling.ypf</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/12 23:37:25</SPAN><a href="../201203/dba_972.htm"  title="一个有趣的SQL查询 ">一个有趣的SQL查询 </a>  <LI   class="text">一个朋友有这样一个sql查询需求：有一个登录表(tmp_test)，包含用户id(uid)和登录时间(login_time)。表结构如下：*************************** 1. row ***************************field: uidtype: int(10) unsignednull: nokey: muldefault: nullextra:**<a href="../201203/dba_972.htm" title="一个有趣的SQL查询 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：sleebin9</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/11 22:44:36</SPAN><a href="../201203/dba_973.htm"  title="concat和outfile妙用 ">concat和outfile妙用 </a>  <LI   class="text">大家有没有接触过这样的需求，采集历史数据库中或者其他数据库中的某些信息，这些信息是另一个服务器需要执行sql的条件。通常我们的处理手段是把这个信息通过sql找出来或导出，然后使用脚本或者手工拼凑新的新的sql语句。在很多紧急情况下(产品bug、数据错乱)会产生这样的需求，这个时候处理的是在线数据库，不能有一点马虎、如果数据量稍微大一点，dba们就够焦头烂额了。我之前也多次遇见这种情况，我把一些经验<a href="../201203/dba_973.htm" title="concat和outfile妙用 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：ISADBA</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/4 18:12:49</SPAN><a href="../201203/dba_976.htm"  title="使用内置定时事件的功能来定时删除 binlog ">使用内置定时事件的功能来定时删除 binlog </a>  <LI   class="text">在 mysql5.1.6 起，增加了一个不错的功能-事件调度器(event scheduler)，可以用做定时执行某些特定任务，来取代原先只能由操作系统的计划任务来执行的工作。更值得 一提的是mysql的事件调度器可以精确到每秒钟执行一个任务，而操作系统的计划任务（如：linux下的cron或windows下的任务计划）只能精 确到每分钟执行一次。对于一些对数据实时性要求比较高的应用（例如：股票、<a href="../201203/dba_976.htm" title="使用内置定时事件的功能来定时删除 binlog ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：扶 凯</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/4 17:53:36</SPAN><a href="../201203/dba_977.htm"  title="用insert delayed减少阻塞时间 ">用insert delayed减少阻塞时间 </a>  <LI   class="text">高并发地进行insert经常导致阻塞很长时间。有些场景下我们并不需要知道insert之后的结果。因此可以采用insert delayed方法。insert delayed是myisam对与sql标准的扩展，在innodb引擎下并不支持。insert delayed之后，系统会立刻返回结果，使用last_inserted_id方法不能获得insert delayed得到的主键id<a href="../201203/dba_977.htm" title="用insert delayed减少阻塞时间 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：shen2</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/4 17:51:43</SPAN><a href="../201203/dba_978.htm"  title="自己动手实现Multi-Master Replication ">自己动手实现Multi-Master Replication </a>  <LI   class="text">直到今天为止，mysql依然只支持一个slave从一个master复制数据，虽然也可以做到一主多备(m-&gt;s)，双主复制(mm)等架构，但是局限性依然很大。例如最近我们遇到一个问题，需要为线上的集群搭建在线延时备份，即从线上的双主集群中再延伸出一组slave，以防重要集群主备都宕机。按照现在mysql的架构，要搭建这种在线备份，只能启动相同数据的实例来实现，假设线上有128个实例在提供服务，<a href="../201203/dba_978.htm" title="自己动手实现Multi-Master Replication ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_13_1.htm" title="《mysql复制》专题">mysql复制</a></SPAN><SPAN>作者：P.Linux</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/3/4 17:22:24</SPAN><a href="../201203/dba_979.htm"  title="MySQL数据库在实际应用一些方面的介绍 ">MySQL数据库在实际应用一些方面的介绍 </a>  <LI   class="text">此篇文章主要介绍的是mysql数据库实际应用方面的操作。但是你必须要先登录到 mysql数据库中，下面的操作是在mysql数据库的实际提示符之下进行的，同时也要求每个相关命令以分号结束。 一、操作技巧1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就ok。2、你可以使用光标上下键调出以前的命令。<a href="../201203/dba_979.htm" title="MySQL数据库在实际应用一些方面的介绍 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：luckyyuan</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2012/2/26 23:10:30</SPAN><a href="../201202/dba_980.htm"  title="MySQL数据库分布式事务XA优缺点与改进方案 ">MySQL数据库分布式事务XA优缺点与改进方案 </a>  <LI   class="text">1 mysql 外部xa分析1.1 作用分析mysql数据库外部xa可以用在分布式数据库代理层，实现对mysql数据库的分布式事务支持，例如开源的代理工具：ameoba[4]，网易的ddb，淘宝的tddl，b2b的cobar等等。通过mysql数据库外部xa，这些工具可以提供跨库的分布式事务。当然，这些工具也就成了外部xa事务的协调者角色。在crash recover时控制悬挂事务是全局commi<a href="../201202/dba_980.htm" title="MySQL数据库分布式事务XA优缺点与改进方案 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Eugene</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_9.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_6.htm' title='第6页'>6</a><a href='l_14_7.htm' title='第7页'>7</a><a href='l_14_8.htm' title='第8页'>8</a><a href='l_14_9.htm' title='第9页'>9</a><span class="current">10</span><a href='l_14_11.htm' title='第11页'>11</a><a href='l_14_12.htm' title='第12页'>12</a><a href='l_14_13.htm' title='第13页'>13</a><a href='l_14_14.htm' title='第14页'>14</a><a>...</a><a href='l_14_11.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="10" id="page">&nbsp;&nbsp;<strong>分页：10/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
