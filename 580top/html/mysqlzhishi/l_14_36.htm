<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第36页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2009/11/18 13:15:21</SPAN><a href="../200911/dba_1248.htm"  title="多版本并发控制：PostgreSQL vs InnoDB ">多版本并发控制：PostgreSQL vs InnoDB </a>  <LI   class="text">多版本并发控制技术被很多数据库或存储引擎采用，如oracle，ms sql server 2005+, postgresql, firebird, innodb, falcon, pbxt, maria等等。新的数据库存储引擎，几乎毫无例外的使用多版本而不是单版本加锁的方法实现并发控制，可以说多版本已经成为未来的发展趋势。虽然都是多版本，但不同的系统的实现却有很大不同。在开源数据库领域最负盛名的两<a href="../200911/dba_1248.htm" title="多版本并发控制：PostgreSQL vs InnoDB ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：风轻扬</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/18 9:26:50</SPAN><a href="../200911/dba_1249.htm"  title="InnoDB线程并发检查机制 ">InnoDB线程并发检查机制 </a>  <LI   class="text">innodb在接受mysql线程调用能时，有一个并发线程的检查机制，通过innodb_thread_concurrency参数进行控制。如果参数设置大于0，则表示检查机制开启，允许进入的线程数就是参数的值。等于0则禁用并发检查。在新的mysql线程调用innodb接口前，innodb会检查已经接受的请求线程数，如已经超过innodb_thread_concurrency设置的限制，则该请求线程会等<a href="../200911/dba_1249.htm" title="InnoDB线程并发检查机制 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：NinGoo</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/16 13:28:01</SPAN><a href="../200911/dba_1250.htm"  title="Mysql 4.1升级到5.0以后一个很郁闷的地方 ">Mysql 4.1升级到5.0以后一个很郁闷的地方 </a>  <LI   class="text">一个字段i，如果是unsigned int，值为0执行 update t set i= i - 1在4.1和5.0.13以后会有不同的结果4.1中结果为0，5.0.13以后为该字段允许的最大整型解决方法1. 用 update t set i = cast(i - 1 as signed); 2. 用 update t set i = greatest(i - 1, 0);3. 打开 no_unsi<a href="../200911/dba_1250.htm" title="Mysql 4.1升级到5.0以后一个很郁闷的地方 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Terence</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/16 9:22:18</SPAN><a href="../200911/dba_1251.htm"  title="mysql的权限信息的存储 ">mysql的权限信息的存储 </a>  <LI   class="text">一直以为mysql的用户权限都是放在mysql.user里边的.其实并不是这样的.user表放置的是用户的全局权限,当你为某个用户分配库权限,表权限的时候,情况就不是这样了.当你为用户分配一个库权限时,mysql.user表中会多出来一条数据,但是这个用户的所有权限都是n.同时mysql.db表会增加一条记录,用户对该库的权限会在这里记录.而当你revoke这个用户的权限后,如果该用户对该库的权限<a href="../200911/dba_1251.htm" title="mysql的权限信息的存储 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Easy</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/16 9:19:15</SPAN><a href="../200911/dba_1252.htm"  title="从Mysql到Sqlite的迁移 ">从Mysql到Sqlite的迁移 </a>  <LI   class="text">一导入mysql数据表到sqliteteamsns有18张数据表,手工建立这种事情不是正常人能做到的.于是在网上找转换的脚本.结果只google到一个python的脚本,写得还挺烂.这时候才感叹phpmyadmin的好用,其实sqlite也有很多web管理界面,但是太多,所以质量参差不齐.这里强烈推荐sqlitemanager,这个东东不但可以在线管理sqlite,更能将mysql的sql文件直接<a href="../200911/dba_1252.htm" title="从Mysql到Sqlite的迁移 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_12_1.htm" title="《mysql迁移》专题">mysql迁移</a></SPAN><SPAN>作者：Easy</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/15 19:24:06</SPAN><a href="../200911/dba_1253.htm"  title="Mysql_insert_id的一个缺陷 ">Mysql_insert_id的一个缺陷 </a>  <LI   class="text">mysql_insert_id() 将 mysql 内部的 c api 函数 mysql_insert_id() 的返回值转换成 long（php 中命名为 int）。如果 auto_increment 的列的类型是 bigint，则 mysql_insert_id() 返回的值将不正确。作为替代方案,我们可以在 sql 查询中用 mysql 内部的 sql 函数 last_insert_id()<a href="../200911/dba_1253.htm" title="Mysql_insert_id的一个缺陷 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Easy</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/15 18:30:28</SPAN><a href="../200911/dba_1254.htm"  title="关于MySQL的字符集 ">关于MySQL的字符集 </a>  <LI   class="text">mysql的字符集处理是这样的： 1）发送请求 客户端(character_set_client）=》数据库连接(character_set_connection)=》存储(table,column) 2）返回请求 存储(table,column)=》数据库连接(character_set_connection )=》客户端(character_set_results) 在每一个非初始节点，都会做<a href="../200911/dba_1254.htm" title="关于MySQL的字符集 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：koyoz</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/10 11:45:36</SPAN><a href="../200911/dba_1257.htm"  title="MySQL 管理工具：Navicat for MySQL 8.0.19 中文版(破解版) ">MySQL 管理工具：Navicat for MySQL 8.0.19 中文版(破...</a>  <LI   class="text">本资料内容来自与mysql.cn论坛，谢谢那些默默做出贡献的朋友！一、 关于mysql5mysql5系列数据库是mysql的最新版本的数据库，比较流行的发行版是mysql-5.0.18。mysql 英文官方网站是http://www.mysql.com/二、 获得mysql5所有的关于mysql数据库的程序，都可以在它的英文官方网站下载到，但是，鉴于不不是所有人的英文都很好，所以建议大家尽量区my<a href="../200911/dba_1257.htm" title="MySQL 管理工具：Navicat for MySQL 8.0.19 中文版(破解版) ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：草原和大树</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_35.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_32.htm' title='第32页'>32</a><a href='l_14_33.htm' title='第33页'>33</a><a href='l_14_34.htm' title='第34页'>34</a><a href='l_14_35.htm' title='第35页'>35</a><span class="current">36</span><a href='l_14_37.htm' title='第37页'>37</a><a href='l_14_38.htm' title='第38页'>38</a><a href='l_14_39.htm' title='第39页'>39</a><a href='l_14_40.htm' title='第40页'>40</a><a>...</a><a href='l_14_37.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="36" id="page">&nbsp;&nbsp;<strong>分页：36/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
