<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>基础知识_MySQL_数据库管理员DBA学习网站 _第34页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识"><span class="zc_666">基础知识</span></a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA">高可用性和HA</a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlzhishi/l_14_1.htm">基础知识</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2009/12/10 22:22:03</SPAN><a href="../200912/dba_1229.htm"  title="MySQL修改库名 ">MySQL修改库名 </a>  <LI   class="text">如果是myisam的话.只要修改data目录下面的那个库名的文件夹的名字就ok了如果是innodb的话.其实是无法修改库名的.网上瞎咧咧的什么rename database或者alter database都是不行的一种方法是比较保守的.直接把老库的内容mysqldump到新库里面还有一种类似上面方法.先alter table 的存储引擎到myisam,然后改了库目录的名字,然后再改回来innodb<a href="../200912/dba_1229.htm" title="MySQL修改库名 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：Johnny Woo</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/7 13:25:09</SPAN><a href="../200912/dba_1230.htm"  title="InnoDB的”替代品”：Percona XtraDB ">InnoDB的”替代品”：Percona XtraDB </a>  <LI   class="text">关于xtradb是percona team在innodb的基础上开发出来的一个更加强大的存储引擎，它百分百的兼容innodb，我们可以用xtradb来替代为mysql的发展做出历史性贡献的innodb，新的xtradb引擎将具有更加强大的性能优势，以及良好的扩展性和一些新特性。percona于2008年12月16日正式对外公布percona xtradb存储引擎，当时版本为1.0.2-1。在09年<a href="../200912/dba_1230.htm" title="InnoDB的”替代品”：Percona XtraDB ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：zhang</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/12/3 9:11:15</SPAN><a href="../200912/dba_1231.htm"  title="数据库HA方案 ">数据库HA方案 </a>  <LI   class="text">我们常用的ha方案有几种：一是用小型机和ha软件作双机热备，这种方案始终有一台设备处于空闲状态，设备利用率很低，而且必须用ibm，hp等厂商的硬件，代价昂贵。二是用oracle的rac来做ha，在linux环境下，oracle提供了全套的解决方案，是个不错的选择，不过最低也需要一套共享的存储设备。三是用oracle dg，这种方案成本最低，但是无法做到故障时应用透明切换，我们也曾经尝试过用hear<a href="../200912/dba_1231.htm" title="数据库HA方案 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：jacky</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/30 20:20:46</SPAN><a href="../200911/dba_1232.htm"  title="推荐使用innodb_plugin ">推荐使用innodb_plugin </a>  <LI   class="text"> innodb-plugin 出现差不多有一年了。从功能上性能上都表现的不错。自mysql-5.1.38后发行的版本中已包括了该功能。（推荐使用mysql-5.1.40)http://dev.mysql.com/doc/refman/5.1/en/innodb.htmlhttp://planet.mysql.com/entry/?id=20926该版本的特性:http://www.innodb.c<a href="../200911/dba_1232.htm" title="推荐使用innodb_plugin ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/30 20:02:24</SPAN><a href="../200911/dba_1233.htm"  title="mysql audit-访问日志记录 ">mysql audit-访问日志记录 </a>  <LI   class="text">背景：假设这么一个情况，你是某公司mysql-dba，某日突然公司数据库中的所有被人为删了。尽管有数据备份，但是因服务停止而造成的损失上千万，现在公司需要查出那个做删除操作的人。但是拥有数据库操作权限的人很多，如何排查，证据又在哪？是不是觉得无能为力？mysql本身并没有操作审计的功能，那是不是意味着遇到这种情况只能自认倒霉呢？本文就将讨论一种简单易行的，用于mysql访问审计的思路。概述：其实m<a href="../200911/dba_1233.htm" title="mysql audit-访问日志记录 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：cenalulu</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/30 9:08:21</SPAN><a href="../200911/dba_1236.htm"  title="合理使用MySQL的Limit进行分页 ">合理使用MySQL的Limit进行分页 </a>  <LI   class="text"> 今天看一个水友说他的mysql现在变的很慢。问什么情况时。说单表超过2个g的一个myisam。真垃圾的回答方式。 简单答复：换一个强劲的服务器。换服务器很管用的：）……… 最终让取到慢查询：以下是代码片段：select*frompw_gbookwhereuid=’n’orderbypostdatedesclimitn,n;如：以下是代码片段：select*frompw_gbookwhereuid<a href="../200911/dba_1236.htm" title="合理使用MySQL的Limit进行分页 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_15_1.htm" title="《存储引擎MyISAM》专题">存储引擎MyISAM</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/30 9:05:46</SPAN><a href="../200911/dba_1237.htm"  title="Innodb共享表空间VS独立表空间 ">Innodb共享表空间VS独立表空间 </a>  <LI   class="text">在使用innodb引擎时将要面对两种表空间的管理选择的问题，innodb有两种管理表空间的方法：1． 共享表空间（也可以拆分成多个小的表空间）2． 独立表空间每一个表有一个独立的表空间。我个人推荐使用独立表空间。在性能和运维上独立表空间比共享的表空间有很多优势。下面我将分别说明一下两种表空间管理的特点。共享表空间：优点：可以放表空间分成多个文件存放到各个磁盘上（表空间文件大小不受表大小的限制，如一<a href="../200911/dba_1237.htm" title="Innodb共享表空间VS独立表空间 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：wubx</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/11/30 9:05:18</SPAN><a href="../200911/dba_1238.htm"  title="如何在Windows下编译或调试MySQL ">如何在Windows下编译或调试MySQL </a>  <LI   class="text">为什么需要在windows下编译mysql？ 在linux下编译mysql是非常方便的操作，而且是轻车熟路，很容易搞定的。随着对mysql的使用时间的增长，也慢慢的对mysql代码的分析有点感兴趣了。所以想着找一个工具去学习一下mysql的代码，对于linux用户可以使用vim+ctags去分析，但做为大多数用户来说工作的平台还都是windows平台。所以就需要在windows上去调试mysql了<a href="../200911/dba_1238.htm" title="如何在Windows下编译或调试MySQL ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：wubx</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_14_1.htm' title='回到第一页'>首页</a><a href='l_14_33.htm' title='上一页'>上一页</a><a>...</a><a href='l_14_30.htm' title='第30页'>30</a><a href='l_14_31.htm' title='第31页'>31</a><a href='l_14_32.htm' title='第32页'>32</a><a href='l_14_33.htm' title='第33页'>33</a><span class="current">34</span><a href='l_14_35.htm' title='第35页'>35</a><a href='l_14_36.htm' title='第36页'>36</a><a href='l_14_37.htm' title='第37页'>37</a><a href='l_14_38.htm' title='第38页'>38</a><a>...</a><a href='l_14_35.htm' title='下一页'>下一页</a><a href='l_14_44.htm' title='尾页'>尾页</a><input type="hidden" value="34" id="page">&nbsp;&nbsp;<strong>分页：34/44页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
