<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>系统运维_ 数据库管理员DBA学习网站 _第14页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a href="../yunwei/l_26_1.htm" class="hover"　title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../windowsserver/l_27_1.htm" title="WindowsServer">WindowsServer</a>|</li><li><a  href="../linux/l_31_1.htm" title="linux">linux</a>|</li><li><a  href="../jiankong/l_32_1.htm" title="监控">监控</a>|</li><li><a  href="../zidonghua/l_33_1.htm" title="自动化脚本">自动化脚本</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../yunwei/l_26_1.htm">系统运维</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2011/3/19 23:09:48</SPAN><a href="../201103/dba_418.htm"  title="根据条件来加载中间件 ">根据条件来加载中间件 </a>  <LI   class="text">我们介绍了数个中间件组件，这些中的一部分是非常有效的所以我们要激活他为全局的。但其它的一些最好只是当我们确认的时候才激活，今天我们就要讲这个的解决方案。根据条件来加载中间件条件在中间件中是超级中间件，这些中间件需要和一些运行的条件一起，才会被启用。让我们看看一些例子：你只想在 /public 中想激活 jsonp 中间件 你不想在你本地的 ip 中激活 basic auth 我认真的研究了 wsg<a href="../201103/dba_418.htm" title="根据条件来加载中间件 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：扶凯</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/19 22:56:53</SPAN><a href="../201103/dba_419.htm"  title="更有效的进行前后台联调-让同一域名上的不同cgi访问不同的ip ">更有效的进行前后台联调-让同一域名上的不同cgi访问不...</a>  <LI   class="text">在日常的前后台联调中，我们都习惯用host的方式来使某个域名的cgi都访问测试环境，然而这有一个显而易见的问题： 如果一个域名下有十几个cgi，而这次提测的只有其中的一个，那么要想整个环境可用，你除了要保证这个cgi可用之外，和你完全无关的十几个cgi也要全部调通。很纠结，不是吗？其实我们有更好的方式，那就是用反向代理，我们可以用nginx来实现。以 appsupport.qq.com 这个域名举<a href="../201103/dba_419.htm" title="更有效的进行前后台联调-让同一域名上的不同cgi访问不同的ip ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：WEB服务器</SPAN><SPAN>作者：Dante</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/18 13:47:57</SPAN><a href="../201103/dba_420.htm"  title="Python 多进程日志记录 ">Python 多进程日志记录 </a>  <LI   class="text">刚开始用 python 做 web 开发的时候我就想一个问题，如果 python 应用需要自己记录一些比 accesslog 更详细的日志(使用 python 的 logging module)，又有多个进程，怎么办最好呢？多个进程往同一个日志文件写入会不会出问题？最近有个在 apache 里用 mod_wsgi 运行的程序，设置了4个 process. 最初没有设置日志的 rotation，看起<a href="../201103/dba_420.htm" title="Python 多进程日志记录 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：WEB服务器</SPAN><SPAN>作者：qingbo.blog</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/17 13:52:42</SPAN><a href="../201103/dba_421.htm"  title="shell 遍历mc ">shell 遍历mc </a>  <LI   class="text">单行脚本：host=10.10.10.10;port=11211;echo -e "stats cachedump 2 0\r\nquit\r\n" | nc $host $port | awk '{print $2;}'| while read key;do echo get $key; done | nc $host $port<a href="../201103/dba_421.htm" title="shell 遍历mc ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：缓存</SPAN><SPAN>作者：phpor &lt;lijunjie1982@yahoo.com.cn&gt;</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/17 13:49:53</SPAN><a href="../201103/dba_422.htm"  title="动态实时跟踪你的java程序 ">动态实时跟踪你的java程序 </a>  <LI   class="text">之前有写 基于aop的日志调试 讨论一种跟踪java程序的方法, 但不是很完美.后来发现了 btrace , 由于它借助动态字节码注入技术 , 实现优雅且功能强大. 只不过, 用起来总是磕磕绊绊的, 时常为了跟踪某个问题, 却花了大把的时间调试btrace的脚本. 为此, 我尝试将几种跟踪模式固化成脚本模板, 待用的时候去调整一下正则表达式之类的. 跟踪过程往往是假设与验证的螺旋迭代过程, 反复的<a href="../201103/dba_422.htm" title="动态实时跟踪你的java程序 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：聚石</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/14 16:06:34</SPAN><a href="../201103/dba_423.htm"  title="如何在windows下用bat脚本定时备份mysql ">如何在windows下用bat脚本定时备份mysql </a>  <LI   class="text">并不是所有mysql都运行在linux下，windows下也需要做例行备份，下面是用bat脚本做自动化备份的例子，大家可以参考下。remrem c:\program files\winrar 需要放到 path 下，才能调用rar cli工具remrem 跳转到工作目录下f:cd f:\dbbakrem 设置变量：备份文件名set bak_file=my_dbbak_%date:~0,-4%.sq<a href="../201103/dba_423.htm" title="如何在windows下用bat脚本定时备份mysql ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：yejr</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/14 15:59:30</SPAN><a href="../201103/dba_424.htm"  title="记一次MongoDB性能问题 ">记一次MongoDB性能问题 </a>  <LI   class="text">最近忙着把一个项目从mysql迁移到mongodb，在导入旧数据的过程中，遇到了些许波折，犯了不少错误，但同时也学到了不少知识，遂记录下来。公司为这个项目专门配备了几台高性能务器，清一色的双路四核超线程cpu，外加32g内存，运维人员安装好mongodb后，就轮到我了，我习惯于在使用新服务器前先看看相关日志，了解一下基本情况，当我浏览mongodb日志时，发现一些警告信息：warning: you<a href="../201103/dba_424.htm" title="记一次MongoDB性能问题 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：缓存</SPAN><SPAN>作者：老王</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/3/9 8:30:34</SPAN><a href="../201103/dba_425.htm"  title="OpenVPN 客户端在 Windows 里的配置 ">OpenVPN 客户端在 Windows 里的配置 </a>  <LI   class="text">自己搭了一个 openvpn server，以前一直是在 mac 里使用客户端，加上 chnroutes，用得很舒服。最近想在 windows 里用一下，结果显示能连上，但是流量就是不从 vpn 走，很郁闷。试了一下，连服务器 ip 10.0.0.1 都 ping 不通。运行 ipconfig 显示 openvpn 创建的 interface 信息为： connection-specific dn<a href="../201103/dba_425.htm" title="OpenVPN 客户端在 Windows 里的配置 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：安装和配置</SPAN><SPAN>作者：qingbo.blog</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_26_1.htm' title='回到第一页'>首页</a><a href='l_26_13.htm' title='上一页'>上一页</a><a>...</a><a href='l_26_10.htm' title='第10页'>10</a><a href='l_26_11.htm' title='第11页'>11</a><a href='l_26_12.htm' title='第12页'>12</a><a href='l_26_13.htm' title='第13页'>13</a><span class="current">14</span><a href='l_26_15.htm' title='第15页'>15</a><a href='l_26_16.htm' title='第16页'>16</a><a href='l_26_17.htm' title='第17页'>17</a><a href='l_26_18.htm' title='第18页'>18</a><a>...</a><a href='l_26_15.htm' title='下一页'>下一页</a><a href='l_26_39.htm' title='尾页'>尾页</a><input type="hidden" value="14" id="page">&nbsp;&nbsp;<strong>分页：14/39页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
