<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>系统运维_ 数据库管理员DBA学习网站 _第7页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a href="../yunwei/l_26_1.htm" class="hover"　title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../windowsserver/l_27_1.htm" title="WindowsServer">WindowsServer</a>|</li><li><a  href="../linux/l_31_1.htm" title="linux">linux</a>|</li><li><a  href="../jiankong/l_32_1.htm" title="监控">监控</a>|</li><li><a  href="../zidonghua/l_33_1.htm" title="自动化脚本">自动化脚本</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../yunwei/l_26_1.htm">系统运维</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2011/10/4 20:46:13</SPAN><a href="../201110/dba_363.htm"  title="人肉解析riak_admin join ">人肉解析riak_admin join </a>  <LI   class="text"> riak_admin只是一个bash脚本，当riak_admin join被执行时，都是在执行riak_kv_console join。大概过程分析 riak_kv_console:join =&gt; %%入口 riak:join(node) =&gt; %% 真正执行 riak_core:join(node) =&gt; %%去到riak_core riak_core_gossip:lega<a href="../201110/dba_363.htm" title="人肉解析riak_admin join ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：54chen</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/10/4 17:52:57</SPAN><a href="../201110/dba_364.htm"  title="重负荷nginx的几个关键配置参数 ">重负荷nginx的几个关键配置参数 </a>  <LI   class="text">不知不觉网站pv就爆发了。nginx压力越来越大，一些默认参数就显得不够用了。我们的主服务器硬件配置非常健壮(双路至强5620 + 48gb内存 + ssd)，理论上可以承受每天过500万的pv，当然，前提是优化得够好。简单罗列一下优化过的几个参数：ulimit -n 65535这个参数位于/etc/default/nginx 中，或者/etc/init.d/nginx 文件中直接设置。 默认是1<a href="../201110/dba_364.htm" title="重负荷nginx的几个关键配置参数 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：WEB服务器</SPAN><SPAN>作者：shen2</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/10/4 17:50:59</SPAN><a href="../201110/dba_365.htm"  title="Clojure世界：使用rlwrap增强REPL ">Clojure世界：使用rlwrap增强REPL </a>  <LI   class="text"> clojure的repl非常方便，可以随时随地试验你的想法，repl是read-eval-print-loop的简称。默认clojure.contrib有带一个shell脚本来启动repl，具体看这里。你也可以用jline来增强repl：java-cp"%clojure_dir%\jline-version.jar;%clojure_jar%"jline.consolerunnerclojure<a href="../201110/dba_365.htm" title="Clojure世界：使用rlwrap增强REPL ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：dennis</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/10/4 17:48:11</SPAN><a href="../201110/dba_366.htm"  title="Clojure世界：文件IO ">Clojure世界：文件IO </a>  <LI   class="text">文件读写是日常编程中最经常使用的操作之一。这篇blog将大概介绍下clojure里对文件操作的常用类库。 首先介绍标准库clojure.java.io，这是最经常用的io库，定义了常见的io操作。 首先，直接看一个例子，可以熟悉下大多数常用的函数：(nsio(:use[clojure.java.io]));;file函数，获取一个java.io.file对象(deff(file"a.txt"));<a href="../201110/dba_366.htm" title="Clojure世界：文件IO ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：dennis</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/10/4 17:36:36</SPAN><a href="../201110/dba_367.htm"  title="blktrace未公开选项网络保存截取数据 ">blktrace未公开选项网络保存截取数据 </a>  <LI   class="text">原创文章，转载请注明： 转载自erlang非业余研究本文链接地址: blktrace未公开选项网络保存截取数据我们透过blktrace来观察io行为的时候，第一件事情需要选择目标设备，以便分析该设备的io行为。具体使用可以参考我之前写的几篇：这里 这里 这里blktrace分为内核部分和应用部分，应用部分收到我们要捕捉的设备名单，传给内核。内核分布在block层的各个tracepoint就会开始工<a href="../201110/dba_367.htm" title="blktrace未公开选项网络保存截取数据 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/10/4 17:36:06</SPAN><a href="../201110/dba_368.htm"  title="hwconfig查看硬件信息 ">hwconfig查看硬件信息 </a>  <LI   class="text">最近经常要测试新硬件，了解硬件的具体型号和参数就非常重要，过去经常透过lspci -vvv等命令来了解，貌似比较不准确。 今天看到阮军同学用的hwconfig感觉信息很专业，推荐给大家。标准的发布版都带的,所以简单的yum install hwconfig就可以使用了。效果如下：$ uname -r2.6.18-164.el5$ sudo yum -y install hwconfig$ sudo<a href="../201110/dba_368.htm" title="hwconfig查看硬件信息 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/9/26 23:33:04</SPAN><a href="../201109/dba_369.htm"  title="puppet使用rsync来同步文件教程 ">puppet使用rsync来同步文件教程 </a>  <LI   class="text">[导读]大家都知道,puppet 同步文件都需要使用puppet 文件服务器,且同步大文件的效率比我们运维经常使用到的rsync效率低且puppet 文件服务器只支持http和puppet 文件传输协议,幸运的是老外给我们写好了自定义的provider和相关插件,现在我们只需要下载rsync模块就可以来完成.是不是很期待,一起来跟sky尝试下吧![正文]puppet rsync模块目前可以在 ht<a href="../201109/dba_369.htm" title="puppet使用rsync来同步文件教程 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：sky</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2011/9/26 23:27:43</SPAN><a href="../201109/dba_370.htm"  title="Linux系统内存相关信息获取 ">Linux系统内存相关信息获取 </a>  <LI   class="text">大型的服务器，特别是数据库服务器的主要瓶颈主要在内存，cpu，以及io上。cpu是可再生资源，不够用等等就有了;内存和土地一样是不可再生资源，被占用了，后续的使用必须等到该资源释放.而io也非常依赖于内存的使用情况,故内存的倒腾效率会大大影响服务器的效率,那么了解服务器内存的使用情况就非常重要。linux内核的内存相关的信息主要有下面几个获取管道，这里我们主要讨论的是系统级别的，没具体到各个进程级<a href="../201109/dba_370.htm" title="Linux系统内存相关信息获取 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：缓存</SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_26_1.htm' title='回到第一页'>首页</a><a href='l_26_6.htm' title='上一页'>上一页</a><a>...</a><a href='l_26_3.htm' title='第3页'>3</a><a href='l_26_4.htm' title='第4页'>4</a><a href='l_26_5.htm' title='第5页'>5</a><a href='l_26_6.htm' title='第6页'>6</a><span class="current">7</span><a href='l_26_8.htm' title='第8页'>8</a><a href='l_26_9.htm' title='第9页'>9</a><a href='l_26_10.htm' title='第10页'>10</a><a href='l_26_11.htm' title='第11页'>11</a><a>...</a><a href='l_26_8.htm' title='下一页'>下一页</a><a href='l_26_39.htm' title='尾页'>尾页</a><input type="hidden" value="7" id="page">&nbsp;&nbsp;<strong>分页：7/39页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
