<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>高可用性和HA_MySQL_数据库管理员DBA学习网站 _第9页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a href="../mysql/l_13_1.htm" class="hover"　title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a  href="../yunwei/l_26_1.htm" title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../mysqlzhishi/l_14_1.htm" title="MySQL基础知识">基础知识</a>|</li><li><a  href="../mysqlha/l_15_1.htm" title="MySQL高可用性和HA"><span class="zc_666">高可用性和HA</span></a>|</li><li><a  href="../mysqlyouhua/l_16_1.htm" title="MySQL性能与优化">性能与优化</a>|</li><li><a  href="../mysqlguzhang/l_17_1.htm" title="MySQL故障与解决">故障与解决</a>|</li><li><a  href="../mysqlyuanma/l_18_1.htm" title="MySQL源码解读">源码解读</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../mysql/l_13_1.htm">MySQL</a>&nbsp;&gt;&nbsp;<a href="../mysqlha/l_15_1.htm">高可用性和HA</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2009/10/18 11:11:51</SPAN><a href="../200910/dba_1303.htm"  title="InnoDB select性能拐点测试 ">InnoDB select性能拐点测试 </a>  <LI   class="text">传说innodb的数据量到了一定程度就会有一个很大的下滑。那么这个阙值究竟是是多少？来做一下测试吧！1、调整my.cnf的参数如下：innodb_file_per_table = 0innodb_flush_log_at_trx_commit = 2innodb_buffer_pool_size = 8ginnodb_file_io_threads = 4重启服务器，启动mysqld2、在test<a href="../200910/dba_1303.htm" title="InnoDB select性能拐点测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:11:19</SPAN><a href="../200910/dba_1304.htm"  title="InnoDB insert性能拐点测试 ">InnoDB insert性能拐点测试 </a>  <LI   class="text">上篇blog《innodb select性能拐点测试》测试了innodb select的性能拐点，本篇blog对insert的性能拐点做了一些对比研究。大家有兴趣就关注一下吧！1、调整my.cnf的参数如下：innodb_file_per_table = 0innodb_flush_log_at_trx_commit = 2innodb_buffer_pool_size = 8ginnodb_fi<a href="../200910/dba_1304.htm" title="InnoDB insert性能拐点测试 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/18 11:08:59</SPAN><a href="../200910/dba_1306.htm"  title="随机主键对InnoDB插入性能的影响 ">随机主键对InnoDB插入性能的影响 </a>  <LI   class="text">孔子说得好，“学而不思则罔，思而不学则殆”。看书看多了不去想不去做对比，很快脑子就会一片混乱。这篇blog稍微介绍下随机主键对innodb插入性能的影响。 innodb引擎的行结构相当复杂（compact、redundant、barracuda）。为了弄明白这一个细节，我翻了很多遍官方手册。后来又对比着看了很多本书，发现他们自相矛盾，无奈之下，只能从简单的开始测起。下面先摘抄两段矛盾的描述：《pr<a href="../200910/dba_1306.htm" title="随机主键对InnoDB插入性能的影响 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_14_1.htm" title="《存储引擎InnoDB》专题">存储引擎InnoDB</a></SPAN><SPAN>作者：陶方</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/16 12:11:22</SPAN><a href="../200910/dba_1312.htm"  title="如何建立索引 ">如何建立索引 </a>  <LI   class="text">关于如何建立索引，及哪些情况适合使用索引，哪些情况不适合使用索引，各种书籍资料有很多。但是最重要的原则是：实际测试。实践是检验真理的唯一标准。建立索引的时候，应进行如下测试：1 explain select语句，看看是否有使用到索引。2 运行update和insert操作，看看建立索引的负效应是否在可接受范围。3 务必在接近生产环境的数据规模下进行索引性能的测试。第三点尤为重要。因为在最近的项目优<a href="../200910/dba_1312.htm" title="如何建立索引 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：rethink</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/11 22:41:12</SPAN><a href="../200910/dba_1322.htm"  title="Mysql 查询的一些优化技巧 ">Mysql 查询的一些优化技巧 </a>  <LI   class="text">1.字段尽量设置为not null2.减少数据转化3.优化count4.优化子查询，用join来代替子查询5.用union all来代替union 这些技巧微不足道，也正是大家容易忽略的。 链接如下：http://www.databasejournal.com/features/mysql/article.php/3813821/five-query-optimizations-in-mysql.<a href="../200910/dba_1322.htm" title="Mysql 查询的一些优化技巧 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Incessant</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2009/10/11 22:35:06</SPAN><a href="../200910/dba_1334.htm"  title="Mysql中的排序优化 ">Mysql中的排序优化 </a>  <LI   class="text"> 排序也就是我们说的order by，mysql更强调的是把排序字段也放在索引中，不需要回表，这是理想的实现方式，如果通过索引没有办法获得有序的数据，mysql通过将取得的数据在内存中进行排序然后再将数据返回给客户端，有两种排序算法：一种是首先根据相应的条件取出相应的排序字段和定位行数据的行指针信息，然后在 sort buffer 中进行排序，最后根据排序结果回表取出需要的字段返回给客户端。另一种<a href="../200910/dba_1334.htm" title="Mysql中的排序优化 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Incessant</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_15_1.htm' title='回到第一页'>首页</a><a href='l_15_8.htm' title='上一页'>上一页</a><a>...</a><a href='l_15_5.htm' title='第5页'>5</a><a href='l_15_6.htm' title='第6页'>6</a><a href='l_15_7.htm' title='第7页'>7</a><a href='l_15_8.htm' title='第8页'>8</a><span class="current">9</span><span class="disabled">下一页</span><span class="disabled">尾页</span><input type="hidden" value="9" id="page">&nbsp;&nbsp;<strong>分页：9/9页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
