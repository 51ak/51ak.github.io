<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>linux_系统运维_数据库管理员DBA学习网站 _第19页</title>
<link href="../../img/main.css" rel="stylesheet" type="text/css" />
<script src="../../img/daohang.js" type="text/javascript"></script>
</head>

<body>


<div id="container">
  <div id="header">
<div class="dh-logo cls"> <div class="dh-logo-logo" ><a href="#"><img src="../../img/logo.gif" alt="数据库管理员DBA学习网站  LOGO"  width="251" height="58" /></a></div><div class="dh-logo-ac" id="topbar"><div class="dh-logo-nav">    <span class="f_black">Tips</span>： 亲爱的<span class="f_333" title="注：网站的访客">GUEST</span>用户，系统已为你<span class="f_333" title="注：不解释">GRANT</span>了<span class="f_333" title="注：可以查看网站上的所有文章">SELECT</span>,<a href="/add.aspx" title="注：可以发表文章" rel="nofollow">INSERT</a> 权限 </div> </div></div>
<div id="topMain"><div id="top"><ul class="nav"><li><a href="../../index.htm">网站首页</a></li><li><a  href="../sqlserver/l_1_1.htm" title="SQLServer">SQLServer</a></li><li><a  href="../Oracle/l_7_1.htm" title="Oracle">Oracle</a></li><li><a  href="../mysql/l_13_1.htm" title="MySQL">MySQL</a></li><li><a  href="../othersql/l_19_1.htm" title="其他数据库">其他数据库</a></li><li><a href="../yunwei/l_26_1.htm" class="hover"　title="系统运维">系统运维</a></li><li><a  href="../kaoshi/l_34_1.htm" title="DBA考试">DBA考试</a></li><li><a  href="../dbahuati/l_39_1.htm" title="DBA话题">DBA话题</a></li></ul><ul class="sub"><li><a  href="../windowsserver/l_27_1.htm" title="WindowsServer">WindowsServer</a>|</li><li><a  href="../linux/l_31_1.htm" title="linux"><span class="zc_666">linux</span></a>|</li><li><a  href="../jiankong/l_32_1.htm" title="监控">监控</a>|</li><li><a  href="../zidonghua/l_33_1.htm" title="自动化脚本">自动化脚本</a>|</li></ul></div></div>
<br class="clearfloat" />
</div>
 
 
    <div class="local_daohang">您现在的位置: <a href="../../">首页</a> &nbsp;&gt;&nbsp;<a href="../yunwei/l_26_1.htm">系统运维</a>&nbsp;&gt;&nbsp;<a href="../linux/l_31_1.htm">linux</a></div>
  <div id="sidebar1">

  <div class='div_tab_tab'>
	<div id="div_login_title">580top数据库:</div>
          <div id="div_login"> <iframe src="../../page/login.html" frameBorder="0" width="100%"  scrolling="no" height="190"></iframe>  
 &nbsp;</div>    
  </div>
    
  
   <div  class='div_tab_tab'>
  <div id="div_ran" > <span>【在线问答】</span><br /><a href="#" >[{类型}] {题干，这里会显示问题的标题}<br />点击进入答题>></a>
	</div>
  </div>
  
   
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    <div class="d9"><p>&nbsp;</p></div>
    <p>&nbsp;</p>
    <p>&nbsp;</p>


    <div class="d3"><p>&nbsp;</p></div>
    
    <p>&nbsp;</p>
    <!-- end #sidebar1 --></div>
  <div id="mainContent">
  

        <div id="contentdiv"> 
            <div id="news_list">
                   <div>
                              <UL><LI class=list_title><SPAN>2010/10/22 23:46:42</SPAN><a href="../201010/dba_475.htm"  title="systemtap观察page_cache的使用情况 ">systemtap观察page_cache的使用情况 </a>  <LI   class="text">在规划服务器的内存使用的时候经常需要知道应用在理想情况下会使用多少的pagecache, 我们好预先把这个内存预留出来.这个值操作系统没有提供可查看的管道,我们只能自己写个脚本来实现. 下面的systemtap脚本每隔n秒显示下当前os下头10个文件占用多少的pagecache, 降序排列.$ cat &gt; pagecache.stpglobal __filenamesglobal pagec<a href="../201010/dba_475.htm" title="systemtap观察page_cache的使用情况 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_19_1.htm" title="《缓存》专题">缓存</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/10/22 23:45:59</SPAN><a href="../201010/dba_476.htm"  title="Centos yum 安装nginx+PHP-FPM+eAccelerator+mysql ">Centos yum 安装nginx+PHP-FPM+eAccelerator+mysql </a>  <LI   class="text">记录下我在linodevps 的centos下安装配置nginx+php-fpm+eaccelerator+mysql的过程。添加安装源 centos 默认官方源中没有nginx 和 php-fpm 所以必须添加第三方源，不然就只能自己编译了。 添加[centalt]源 在/etc/yum.repo.d 目下创建 alt.ru.repo 文件内容如下：[centalt]name=centalt p<a href="../201010/dba_476.htm" title="Centos yum 安装nginx+PHP-FPM+eAccelerator+mysql ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_17_1.htm" title="《WEB服务器》专题">WEB服务器</a></SPAN><SPAN>作者：xiao H</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/10/22 23:40:59</SPAN><a href="../201010/dba_477.htm"  title="linux环境下使用GFS文件系统 ">linux环境下使用GFS文件系统 </a>  <LI   class="text">gfs文件系统其实是一个网络日志文件系统，通常被用作多台计算机共享同一存储设备…… gfs文件系统其实是一个网络日志文件系统，通常被用作多台计算机共享同一存储设备。由于 gfs是日志文件系统，所以，如果将其应用到单独的一台计算机上，即完全等同于 本地日志文件系统，享受日志文件系统带来的好处。本文便向各位简介gfs文件系统在linux环境下的使用。 一、下载与编译 下载gfs文件系统 gfs文件系统<a href="../201010/dba_477.htm" title="linux环境下使用GFS文件系统 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_18_1.htm" title="《磁盘和存储》专题">磁盘和存储</a></SPAN><SPAN>作者：草原和大树</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/10/3 21:27:43</SPAN><a href="../201010/dba_479.htm"  title="ftrace和它的前端工具trace-cmd ">ftrace和它的前端工具trace-cmd </a>  <LI   class="text">最近在调查lockless的ring_buffer的时候,发现了ftrace. ftrace是 linux 内核中提供的一种调试工具。使用 ftrace 可以对内核中发生的事情进行跟踪，这在调试 bug 或者分析内核时非常有用.什么是ftrace: 请参考http://lwn.net/articles/322666/trace-cmd - command line reader for ftrac<a href="../201010/dba_479.htm" title="ftrace和它的前端工具trace-cmd ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/23 22:15:41</SPAN><a href="../201009/dba_480.htm"  title="分布式日志系统scribe使用手记 ">分布式日志系统scribe使用手记 </a>  <LI   class="text"> scribe 是facebook 开源的分布式日志系统 。其使用了thrift传输log，由于使用thrift，所以不论是什么语言的项目都可以实现日志收集，可达到远程或者是本地同步远程的分布式日志收集效果，在其示例配置中，并发量可达到max_msg_per_second=2000000，对普通的应用来说，每秒上百万的访问量可能性很小，因此基本上即使最简单的配置，远程收集所有项目的log也是可靠的<a href="../201009/dba_480.htm" title="分布式日志系统scribe使用手记 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_21_1.htm" title="《安装和配置》专题">安装和配置</a></SPAN><SPAN>作者：54chen</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/22 23:28:27</SPAN><a href="../201009/dba_481.htm"  title="Unix高级环境编程系列笔记 ">Unix高级环境编程系列笔记 </a>  <LI   class="text">终于可以安静的坐下来仔细的阅读这本厚厚的书了，它就是“ advanced programming in the unix environment”，中文名叫《unix高级环境编程》，简称apue。这本书被誉为unix程序员的圣经，所以它有多经典不用我再赘述了。我读的是英文第二版，感觉挺费劲儿。说说感受，首先，读这本书需要有一些unix的编程经验，书中论述的很多问题并不容易明白。对于一些接口的特性，<a href="../201009/dba_481.htm" title="Unix高级环境编程系列笔记 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：nebula</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/22 7:36:53</SPAN><a href="../201009/dba_482.htm"  title="blktrace 深度了解linux系统的IO运作 ">blktrace 深度了解linux系统的IO运作 </a>  <LI   class="text">我们在linux上总是要保存数据的，数据要不保存在文件系统里要不保存在文件系统(如ext3)，要不就在裸设备里面。我们在使用这些数据的时候都是通过文件这个抽象来访问的，操作系统会把我们需要的数据给我们，我们通常无需和块设备打交道。从下图我们可以很清楚的看到： 我们会发现io是个层次很深的子系统，有很复杂的数据流动线路。至于操作系统如何去存储和获取这些数据对我们完全是黑盒子的，这通常不是问题。但是如<a href="../201009/dba_482.htm" title="blktrace 深度了解linux系统的IO运作 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：<a href="../zhuanti/zt_18_1.htm" title="《磁盘和存储》专题">磁盘和存储</a></SPAN><SPAN>作者：Yu Feng</SPAN>  </LI></UL><UL><LI class=list_title><SPAN>2010/9/22 7:35:40</SPAN><a href="../201009/dba_483.htm"  title="I/O模型-读书笔记 ">I/O模型-读书笔记 </a>  <LI   class="text">i/o模型:i/o操作需要内核系统调用来完成,系统调用需要cpu来调度,而cpu的访问速度相对于i/o来说比较快,所以cpu不得不浪费cpu时间来等待慢速i/o操作.通过多进程方式来充分利用cpu资源,当还是希望让cpu花费少的时间在i/o操作的调度上,这样就可以有更多的cpu来完成i/o操作.很多技术和策略都围绕如何让高速的cpu和慢速的i/o设备更好的协调工作.i/o操作主要是网络数据的接收和<a href="../201009/dba_483.htm" title="I/O模型-读书笔记 ">[阅读全文]</A>   <LI class="ot"><SPAN>专题：</SPAN><SPAN>作者：ywdblog</SPAN>  </LI></UL>
                            </div>
                            <div class="sabrosus"><a href='l_31_1.htm' title='回到第一页'>首页</a><a href='l_31_18.htm' title='上一页'>上一页</a><a>...</a><a href='l_31_15.htm' title='第15页'>15</a><a href='l_31_16.htm' title='第16页'>16</a><a href='l_31_17.htm' title='第17页'>17</a><a href='l_31_18.htm' title='第18页'>18</a><span class="current">19</span><a href='l_31_20.htm' title='第20页'>20</a><a href='l_31_21.htm' title='第21页'>21</a><a href='l_31_22.htm' title='第22页'>22</a><a href='l_31_23.htm' title='第23页'>23</a><a>...</a><a href='l_31_20.htm' title='下一页'>下一页</a><a href='l_31_35.htm' title='尾页'>尾页</a><input type="hidden" value="19" id="page">&nbsp;&nbsp;<strong>分页：19/35页</strong></div>         
            </div>        
        </div>
<!-- end #mainContent --></div>
	<!-- 这个用于清除浮动的元素应当紧跟 #mainContent div 之后，以便强制 #container div 包含所有的子浮动 -->
	<br class="clearfloat" />

      
   
	<div id="footer">
  <ul class="green_1">		<li><div id="slogo"></div></li>		<li><div id="bline"></div></li>		<li><div id="binfo">网站名称：数据库DBA学习网站 www.580top.com<br />网络维护：51ak(微信:sohu91) <br /></div></li>	</ul>
	
   <script charset="UTF-8" id="LA_COLLECT" src="//sdk.51.la/js-sdk-pro.min.js"></script>
<script>LA.init({id:"K2Iiv8isAYH4TLPh",ck:"K2Iiv8isAYH4TLPh"})</script>
  <!-- end #footer --></div>
<!-- end #container --></div>
</body>
</html>
